{
  "version": 3,
  "sources": ["../../src/schedules/OnOffSchedule.ts"],
  "sourcesContent": ["import { ConditionAction } from \"../actions/ConditionAction\";\nimport { OnOffStateAction } from \"../actions/OnOffStateAction\";\nimport type { UniversalTriggerScheduler } from \"../scheduler/UniversalTriggerScheduler\";\nimport type { LoggingService } from \"../services/LoggingService\";\nimport { Schedule } from \"./Schedule\";\n\n/**\n * OnOffSchedule\n */\nexport class OnOffSchedule extends Schedule {\n    private onAction: OnOffStateAction<string | boolean | number>;\n    private offAction: OnOffStateAction<string | boolean | number>;\n\n    /**\n     * @param onAction on\n     * @param offAction off\n     * @param triggerScheduler Scheduler\n     * @param loggingService Log service\n     */\n    constructor(\n        onAction: OnOffStateAction<string | boolean | number>,\n        offAction: OnOffStateAction<string | boolean | number>,\n        triggerScheduler: UniversalTriggerScheduler,\n        loggingService: LoggingService,\n    ) {\n        super(triggerScheduler, loggingService);\n        if (onAction == null) {\n            throw new Error(`onAction may not be null or undefined`);\n        }\n        if (offAction == null) {\n            throw new Error(`offAction may not be null or undefined`);\n        }\n        this.onAction = onAction;\n        this.offAction = offAction;\n    }\n\n    /**\n     * @param onAction Action\n     */\n    public setOnAction(onAction: OnOffStateAction<string | boolean | number>): void {\n        if (onAction == null) {\n            throw new Error(`onAction may not be null or undefined`);\n        }\n        this.onAction = onAction;\n        this.getTriggers().forEach(t => {\n            const action = t.getAction();\n            if (action instanceof OnOffStateAction) {\n                if (action.getBooleanValue()) {\n                    t.setAction(onAction);\n                }\n            } else if (action instanceof ConditionAction) {\n                const decoratedAction = action.getAction();\n                if (decoratedAction instanceof OnOffStateAction) {\n                    if (decoratedAction.getBooleanValue()) {\n                        action.setAction(onAction);\n                    }\n                }\n            }\n        });\n    }\n\n    /**\n     * @param offAction Action\n     */\n    public setOffAction(offAction: OnOffStateAction<string | boolean | number>): void {\n        if (offAction == null) {\n            throw new Error(`offAction may not be null or undefined`);\n        }\n        this.offAction = offAction;\n        this.getTriggers().forEach(t => {\n            const action = t.getAction();\n            if (action instanceof OnOffStateAction) {\n                if (!action.getBooleanValue()) {\n                    t.setAction(offAction);\n                }\n            } else if (action instanceof ConditionAction) {\n                const decoratedAction = action.getAction();\n                if (decoratedAction instanceof OnOffStateAction) {\n                    if (!decoratedAction.getBooleanValue()) {\n                        action.setAction(offAction);\n                    }\n                }\n            }\n        });\n    }\n\n    /**\n     * getOnAction\n     */\n    public getOnAction(): OnOffStateAction<string | boolean | number> {\n        return this.onAction;\n    }\n\n    /**\n     * getOffAction\n     */\n    public getOffAction(): OnOffStateAction<string | boolean | number> {\n        return this.offAction;\n    }\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAAgC;AAChC,8BAAiC;AAGjC,sBAAyB;AAKlB,MAAM,sBAAsB,yBAAS;AAAA,EAChC;AAAA,EACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAQR,YACI,UACA,WACA,kBACA,gBACF;AACE,UAAM,kBAAkB,cAAc;AACtC,QAAI,YAAY,MAAM;AAClB,YAAM,IAAI,MAAM,uCAAuC;AAAA,IAC3D;AACA,QAAI,aAAa,MAAM;AACnB,YAAM,IAAI,MAAM,wCAAwC;AAAA,IAC5D;AACA,SAAK,WAAW;AAChB,SAAK,YAAY;AAAA,EACrB;AAAA;AAAA;AAAA;AAAA,EAKO,YAAY,UAA6D;AAC5E,QAAI,YAAY,MAAM;AAClB,YAAM,IAAI,MAAM,uCAAuC;AAAA,IAC3D;AACA,SAAK,WAAW;AAChB,SAAK,YAAY,EAAE,QAAQ,OAAK;AAC5B,YAAM,SAAS,EAAE,UAAU;AAC3B,UAAI,kBAAkB,0CAAkB;AACpC,YAAI,OAAO,gBAAgB,GAAG;AAC1B,YAAE,UAAU,QAAQ;AAAA,QACxB;AAAA,MACJ,WAAW,kBAAkB,wCAAiB;AAC1C,cAAM,kBAAkB,OAAO,UAAU;AACzC,YAAI,2BAA2B,0CAAkB;AAC7C,cAAI,gBAAgB,gBAAgB,GAAG;AACnC,mBAAO,UAAU,QAAQ;AAAA,UAC7B;AAAA,QACJ;AAAA,MACJ;AAAA,IACJ,CAAC;AAAA,EACL;AAAA;AAAA;AAAA;AAAA,EAKO,aAAa,WAA8D;AAC9E,QAAI,aAAa,MAAM;AACnB,YAAM,IAAI,MAAM,wCAAwC;AAAA,IAC5D;AACA,SAAK,YAAY;AACjB,SAAK,YAAY,EAAE,QAAQ,OAAK;AAC5B,YAAM,SAAS,EAAE,UAAU;AAC3B,UAAI,kBAAkB,0CAAkB;AACpC,YAAI,CAAC,OAAO,gBAAgB,GAAG;AAC3B,YAAE,UAAU,SAAS;AAAA,QACzB;AAAA,MACJ,WAAW,kBAAkB,wCAAiB;AAC1C,cAAM,kBAAkB,OAAO,UAAU;AACzC,YAAI,2BAA2B,0CAAkB;AAC7C,cAAI,CAAC,gBAAgB,gBAAgB,GAAG;AACpC,mBAAO,UAAU,SAAS;AAAA,UAC9B;AAAA,QACJ;AAAA,MACJ;AAAA,IACJ,CAAC;AAAA,EACL;AAAA;AAAA;AAAA;AAAA,EAKO,cAA2D;AAC9D,WAAO,KAAK;AAAA,EAChB;AAAA;AAAA;AAAA;AAAA,EAKO,eAA4D;AAC/D,WAAO,KAAK;AAAA,EAChB;AACJ;",
  "names": []
}
