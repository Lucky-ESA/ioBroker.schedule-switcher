{
  "version": 3,
  "sources": ["../../src/html/VisHtmlTable.ts"],
  "sourcesContent": ["import { htmltable } from \"./htmlTable\";\n\nexport class VisHtmlTable implements htmltable {\n    private adapter: ioBroker.Adapter;\n    private htmlVal: any;\n    private stateVal: any;\n    private lang: string;\n\n    constructor(adapter: ioBroker.Adapter) {\n        this.adapter = adapter;\n        this.htmlVal = {};\n        this.stateVal = {};\n        this.lang = \"de\";\n    }\n\n    public changeEnabled(id: string, val: ioBroker.State | null | undefined): void {\n        if (!this.adapter.config.usehtml) return;\n        this.adapter.log.debug(`changeEnabled: ${id} - ${JSON.stringify(val)}`);\n        if (val != null && val.val != null) {\n            this.stateVal[id.replace(\".enabled\", \".data\")][\"enabled\"] = val.val;\n            this.createHTML();\n        }\n    }\n\n    public changeHTML(id: string, val: ioBroker.State | null | undefined): void {\n        if (!this.adapter.config.usehtml) return;\n        this.adapter.log.debug(`changeHTML: ${id} - ${JSON.stringify(val)}`);\n        if (val != null && val.val != null) {\n            this.htmlVal[id] = val.val;\n            this.createHTML();\n        }\n    }\n\n    public updateHTML(): void {\n        if (!this.adapter.config.usehtml) return;\n        this.createHTML();\n    }\n\n    public async changeTrigger(id: string, val: ioBroker.State | null | undefined, first = true): Promise<void> {\n        if (!this.adapter.config.usehtml) return;\n        this.adapter.log.debug(`changeTrigger: ${id} - ${JSON.stringify(val)} - ${first}`);\n        if (id != undefined && val != null && val.val != null) {\n            const enabled = await this.adapter.getStateAsync(id.replace(\".data\", \".enabled\"));\n            const value = typeof val.val === \"string\" ? JSON.parse(val.val) : val.val;\n            value[\"enabled\"] = enabled != null && enabled.val != null ? enabled.val : false;\n            this.stateVal[id] = value;\n            if (first) this.createHTML();\n        }\n    }\n\n    private async createHTML(): Promise<void> {\n        this.adapter.log.debug(`Start update HTML!`);\n        if (typeof this.stateVal === \"object\" && Object.keys(this.stateVal).length === 0) return;\n        const id = this.htmlVal;\n        let text: string = \"\";\n        let count: number = 0;\n        let countall: number = 0;\n        const now: Date = new Date();\n        for (const state in this.stateVal) {\n            const data = this.stateVal[state];\n            let devices: string = \"\";\n            let status: string = \"\";\n            const next_event: string[] = [\"\", \"\", \"\", \"\", \"\", \"\", \"\"];\n            let triggers: string = \"\";\n            let iTag: string = \"\";\n            let iTagEnd: string = \"\";\n            let font_text_color: string = id[\"font_color_text_enabled\"];\n            if (!data.enabled) {\n                iTag = `<i>`;\n                iTagEnd = `</i>`;\n                font_text_color = id[\"font_color_text_disabled\"];\n            }\n            let counter: number = 0;\n            let nextDateTime: number = 0;\n            let nextDateTimeIcon: number = 0;\n            let nextaction: string = \"\";\n            for (const trigger of data.triggers) {\n                ++countall;\n                nextDateTimeIcon = nextDateTime;\n                let change_times: string = \"\";\n                let times: string = \"\";\n                let action: string = \"\";\n                ++counter;\n                const isodd = counter % 2 != 0 ? id[\"background_color_even\"] : id[\"background_color_odd\"];\n                let addDate: number = 0;\n                if (trigger.type === \"TimeTrigger\") {\n                    if (trigger.hour === 0 && trigger.minute === 0) addDate = 1;\n                    const switchTime: Date = new Date(\n                        `${now.getFullYear()}-${now.getMonth() + 1}-${now.getDate() + addDate} ${trigger.hour}:${trigger.minute}`,\n                    );\n                    if (switchTime >= now && trigger.weekdays.includes(now.getDay())) {\n                        nextDateTime = await this.nextEvent(now.getDay(), nextDateTime);\n                    } else {\n                        const t: string = await this.nextDateSwitch(new Date(), trigger);\n                        nextDateTime = await this.nextEvent(new Date(t).getDay(), nextDateTime);\n                    }\n                    times = `${trigger.hour.toString().padStart(2, \"0\")}:${trigger.minute.toString().padStart(2, \"0\")}`;\n                    change_times =\n                        `<input type=\"time\" id=\"nexttime${countall}\" value=\"${times}\" required />` +\n                        ` <input for=\"nexttime\" type=\"button\" value=\"save\" onclick=\"sendToTime('${this.adapter.namespace}', 'time', '${trigger.id}', '${state}', '${countall}')\" /> `;\n                } else if (trigger.type === \"AstroTrigger\") {\n                    if (new Date(trigger.todayTrigger.date) >= now && trigger.weekdays.includes(now.getDay())) {\n                        nextDateTime = await this.nextEvent(now.getDay(), nextDateTime);\n                    } else {\n                        nextDateTime = await this.nextEvent(new Date(trigger.todayTrigger.date).getDay(), nextDateTime);\n                    }\n                    times =\n                        `${trigger.todayTrigger.hour.toString().padStart(2, \"0\")}` +\n                        `:${trigger.todayTrigger.minute.toString().padStart(2, \"0\")}`;\n                    change_times = `<select id=\"timeselect${countall}\">\n                    <option value=\"sunrise\" ${trigger.astroTime === \"sunrise\" ? 'selected=\"selected\"' : \"\"}>\n                    ${await this.helper_translator(\"sunrise\")}</option>\n                    <option value=\"solarNoon\" ${trigger.astroTime === \"solarNoon\" ? 'selected=\"selected\"' : \"\"}>\n                    ${await this.helper_translator(\"solarNoon\")}</option>\n                    <option value=\"sunset\" ${trigger.astroTime === \"sunset\" ? 'selected=\"selected\"' : \"\"}>\n                    ${await this.helper_translator(\"sunset\")}</option>\n                    </select>\n                    <input size=\"2px\" type=\"number\" id=\"shift${countall}\" min=\"-120\" max=\"120\" step=\"1\" placeholder=\"00\" required value=\"${trigger.shiftInMinutes}\" />\n                    <input for=\"timeselect${countall}\" type=\"button\" value=\"save\" onclick=\"sendToAstro('${this.adapter.namespace}', 'astro', '${state}', '${trigger.id}', '${countall}')\" />`;\n                } else if (trigger.type === \"OneTimeTrigger\") {\n                    nextDateTime = await this.nextEvent(new Date(trigger.date).getDay(), nextDateTime);\n                    if ((await this.getWeek(new Date(trigger.date))) === (await this.getWeek(new Date()))) {\n                        trigger.weekdays = [new Date().getDay()];\n                    }\n                    times =\n                        `${new Date(trigger.date).getHours().toString().padStart(2, \"0\")}` +\n                        `:${new Date(trigger.date).getMinutes().toString().padStart(2, \"0\")}`;\n                    change_times =\n                        `<input class=\"datetime\" type=\"datetime-local\" name=\"datetime\" id=\"datetime${countall}\" ` +\n                        `value=\"${this.adapter.formatDate(new Date(trigger.date), \"YYYY-MM-DD hh:mm\")}\"` +\n                        `min=\"${this.adapter.formatDate(new Date(), \"YYYY-MM-DD hh:mm\")}\"` +\n                        `max=\"${this.adapter.formatDate(new Date(new Date().setFullYear(new Date().getFullYear() + 1)), \"YYYY-MM-DD hh:mm\")}\"` +\n                        `required />` +\n                        `<input for=\"datetime${countall}\" type=\"button\" value=\"save\" onclick=\"sendToDateTime('${this.adapter.namespace}', 'datetime', '${trigger.id}', '${state}', '${countall}')\" /> `;\n                }\n                if (trigger.action && trigger.action.type === \"ConditionAction\") {\n                    action =\n                        `&ensp;${iTag}${trigger.action.condition.constant}` +\n                        `${trigger.action.condition.sign}${trigger.action.condition.constant}${iTagEnd}&ensp;` +\n                        `${trigger.action.action.name === \"On\" ? id[\"icon_true\"] : id[\"icon_false\"]}`;\n                    if (nextDateTimeIcon != nextDateTime)\n                        nextaction = trigger.action.action.name === \"On\" ? id[\"icon_true\"] : id[\"icon_false\"];\n                }\n                if (trigger.action && trigger.action.type === \"OnOffStateAction\") {\n                    action = `&ensp;${trigger.action.name === \"On\" ? id[\"icon_true\"] : id[\"icon_false\"]}`;\n                    if (nextDateTimeIcon != nextDateTime)\n                        nextaction = trigger.action.name === \"On\" ? id[\"icon_true\"] : id[\"icon_false\"];\n                }\n                triggers +=\n                    `\n                <tr style=\"background-color:${isodd}; \n                color:${font_text_color};\n                font-weight:\"bold\";\n                font-size:${id[\"header_font_size\"]}px;\">\n                <td style=\"text-align:${id[\"column_align_row_01\"]}\">\n                <label for=\"delete${countall}\">${iTag}${trigger.type}${iTagEnd}</label>&ensp;\n                <input type=\"checkbox\" id=\"delete${countall}\" name=\"delete${countall}\" />\n                <input for=\"delete${countall}\" type=\"button\" value=\"delete\" onclick=\"deleteTrigger('${this.adapter.namespace}', 'delete-trigger', '${trigger.id}', '${state}', '${countall}')\" /></td>\n                <td title=\"${times}\" style=\"text-align:${id[\"column_align_row_02\"]}\">${change_times}</td>\n                <td title=\"${times}\" style=\"text-align:${id[\"column_align_row_03\"]}\">${iTag}${times}${iTagEnd}${action}</td>\n                <td id=\"weekday\" ` +\n                    `onClick=\"changeweekdays('${this.adapter.namespace}', 'week', '${state}', '${trigger.id}', 1, '${trigger.type}')\" ` +\n                    `style=\"text-align:${id[\"column_align_row_04\"]}; ` +\n                    `color:${trigger.weekdays && trigger.weekdays.includes(1) ? id[\"font_color_weekdays_enabled\"] : id[\"font_color_weekdays_disabled\"]};\">` +\n                    `${iTag}${id[\"column_text_04\"]}${iTagEnd}</td>\n                <td id=\"weekday\" ` +\n                    `onClick=\"changeweekdays('${this.adapter.namespace}', 'week', '${state}', '${trigger.id}', 2, '${trigger.type}')\" ` +\n                    `style=\"text-align:${id[\"column_align_row_05\"]}; ` +\n                    `color:${trigger.weekdays && trigger.weekdays.includes(2) ? id[\"font_color_weekdays_enabled\"] : id[\"font_color_weekdays_disabled\"]};\">` +\n                    `${iTag}${id[\"column_text_05\"]}${iTagEnd}</td>\n                <td id=\"weekday\" ` +\n                    `onClick=\"changeweekdays('${this.adapter.namespace}', 'week', '${state}', '${trigger.id}', 3, '${trigger.type}')\" ` +\n                    `style=\"text-align:${id[\"column_align_row_06\"]}; ` +\n                    `color:${trigger.weekdays && trigger.weekdays.includes(3) ? id[\"font_color_weekdays_enabled\"] : id[\"font_color_weekdays_disabled\"]};\">` +\n                    `${iTag}${id[\"column_text_06\"]}${iTagEnd}</td>\n                <td id=\"weekday\" ` +\n                    `onClick=\"changeweekdays('${this.adapter.namespace}', 'week', '${state}', '${trigger.id}', 4, '${trigger.type}')\" ` +\n                    `style=\"text-align:${id[\"column_align_row_07\"]}; ` +\n                    `color:${trigger.weekdays && trigger.weekdays.includes(4) ? id[\"font_color_weekdays_enabled\"] : id[\"font_color_weekdays_disabled\"]};\">` +\n                    `${iTag}${id[\"column_text_07\"]}${iTagEnd}</td>\n                <td id=\"weekday\" ` +\n                    `onClick=\"changeweekdays('${this.adapter.namespace}', 'week', '${state}', '${trigger.id}', 5, '${trigger.type}')\" ` +\n                    `style=\"text-align:${id[\"column_align_row_08\"]}; ` +\n                    `color:${trigger.weekdays && trigger.weekdays.includes(5) ? id[\"font_color_weekdays_enabled\"] : id[\"font_color_weekdays_disabled\"]};\">` +\n                    `${iTag}${id[\"column_text_08\"]}${iTagEnd}</td>\n                <td id=\"weekday\" ` +\n                    `onClick=\"changeweekdays('${this.adapter.namespace}', 'week', '${state}', '${trigger.id}', 6, '${trigger.type}')\" ` +\n                    `style=\"text-align:${id[\"column_align_row_09\"]}; ` +\n                    `color:${trigger.weekdays && trigger.weekdays.includes(6) ? id[\"font_color_weekdays_enabled\"] : id[\"font_color_weekdays_disabled\"]};\">` +\n                    `${iTag}${id[\"column_text_09\"]}${iTagEnd}</td>\n                <td id=\"weekday\" ` +\n                    `onClick=\"changeweekdays('${this.adapter.namespace}', 'week', '${state}', '${trigger.id}', 0, '${trigger.type}')\" ` +\n                    `style=\"text-align:${id[\"column_align_row_10\"]}; ` +\n                    `color:${trigger.weekdays && trigger.weekdays.includes(0) ? id[\"font_color_weekdays_enabled\"] : id[\"font_color_weekdays_disabled\"]};\">` +\n                    `${iTag}${id[\"column_text_10\"]}${iTagEnd}</td>\n                </tr>`;\n            }\n            if (nextDateTime < 8) {\n                if (nextDateTime === 7) nextDateTime = 0;\n                next_event[nextDateTime] = nextaction;\n            }\n            if (data.onAction && data.onAction && data.onAction.idsOfStatesToSet) {\n                if (data.onAction.idsOfStatesToSet[0] !== \"default.state\") {\n                    for (const dev of data.onAction.idsOfStatesToSet) {\n                        if (devices == \"\") devices = dev;\n                        else devices += `<br/>${dev}`;\n                    }\n                }\n            }\n            status =\n                `${iTag}${data.onAction.onValue}/${data.onAction.offValue}${iTagEnd}` +\n                `&ensp;${data.enabled ? id[\"icon_true\"] : id[\"icon_false\"]}`;\n            const status_icon = data.enabled ? \"green\" : \"red\";\n            text += `\n            <tr style=\"background-color:${id[\"background_color_trigger\"]}; \n            color:${font_text_color};\n            font-weight:\"bold\";\n            font-size:${id[\"header_font_size\"]}px;\">\n            <td style=\"text-align:${id[\"column_align_row_01\"]}\">\n            <button \n                style=\"border:none; \n                background-color:transparent; \n                color:${status_icon}; \n                font-size:${id[\"column_width_01\"]}px; \n                text-align:left\" \n                value=\"${data.enabled}\" onclick=\"setState('${state.replace(\"data\", \"enabled\")}', this.value)\">${id[\"icon_switch_symbol\"]}\n            </button>&ensp;&ensp;${iTag}${data.name}&ensp;(${count})${iTagEnd}</td>\n            <td title=\"${devices}\" style=\"text-align:${id[\"column_align_row_02\"]}\">${iTag}${devices}${iTagEnd}</td>\n            <td title=\"${status}\" style=\"text-align:${id[\"column_align_row_03\"]}\">${status}</td>\n            <td style=\"text-align:${id[\"column_align_row_04\"]}\">${next_event[1]}</td>\n            <td style=\"text-align:${id[\"column_align_row_05\"]}\">${next_event[2]}</td>\n            <td style=\"text-align:${id[\"column_align_row_06\"]}\">${next_event[3]}</td>\n            <td style=\"text-align:${id[\"column_align_row_07\"]}\">${next_event[4]}</td>\n            <td style=\"text-align:${id[\"column_align_row_08\"]}\">${next_event[5]}</td>\n            <td style=\"text-align:${id[\"column_align_row_09\"]}\">${next_event[6]}</td>\n            <td style=\"text-align:${id[\"column_align_row_10\"]}\">${next_event[0]}</td>\n            </tr>`;\n            text += triggers;\n            ++count;\n        }\n        await this.mergeHTML(text, countall, count);\n    }\n\n    private async getWeek(times: Date): Promise<number> {\n        const onejan: any = new Date(times.getFullYear(), 0, 1);\n        const today: any = new Date(times.getFullYear(), times.getMonth(), times.getDate());\n        const dayOfYear = (today - onejan + 86400000) / 86400000;\n        return Math.ceil(dayOfYear / 7);\n    }\n\n    private async nextEvent(actual: number, next: number): Promise<number> {\n        if (actual === 0) actual = 7;\n        if (actual > next) return actual;\n        return next;\n    }\n\n    private async nextDateSwitch(now: Date, trigger: any): Promise<string> {\n        let diffDays: number = 0;\n        const nextDay: number =\n            trigger.weekdays.length === 1\n                ? trigger.weekdays[0]\n                : await this.nextActiveDay(trigger.weekdays, now.getDay());\n        if (nextDay > now.getDay()) {\n            diffDays = nextDay - now.getDay();\n        } else {\n            diffDays = nextDay + 7 - now.getDay();\n        }\n        const next: Date = new Date(now.setDate(now.getDate() + diffDays));\n        const hour = trigger.hour != null ? trigger.hour : trigger.todayTrigger.hour;\n        const minute = trigger.minute != null ? trigger.minute : trigger.todayTrigger.minute;\n        return new Date(\n            `${next.getFullYear()}-${next.getMonth() + 1}-${next.getDate()} ${hour}:${minute}`,\n        ).toISOString();\n    }\n\n    private async nextActiveDay(array: number[], day: number): Promise<number> {\n        array = array.map((val) => {\n            return val === 0 ? 7 : val;\n        });\n        const numChecker: any = (num: any) => array.find((v) => v > num);\n        const next: number | undefined = numChecker(day);\n        return next == undefined ? 0 : next;\n    }\n\n    private async mergeHTML(htmltext: string, countall: number, count: number): Promise<void> {\n        const id = this.htmlVal;\n        let div = '<div class=\"container\">';\n        let div_css = `\n        div.container {\n            align-items: center;\n            justify-content: center;\n        }`;\n        let min = \"\";\n        if (id[\"jarvis\"]) {\n            div = \"<div>\";\n            div_css = \"\";\n            min = \"min-width:100%;\";\n        }\n        const htmlStart = `\n        <title>Schedule-Switcher</title>\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, minimum-scale=1.0\">\n        <meta http-equiv=\"content-type\" content=\"text/html; charset=utf-8\">\n        <style>\n        * {\n            margin: 0;\n        }\n        body {\n            background-color: ${id[\"background_color_body\"]}; margin: 0 auto;\n        }\n        p {\n            padding-top: 10px; padding-bottom: 10px; text-align: ${id[\"p_tag_text_algin\"]}\n        }\n        #updatetime:hover {\n            cursor: pointer;\n        }\n        #weekday:hover {\n            cursor: pointer;\n            background-color: ${id[\"background_color_weekdays_hover\"]};\n        }\n        td {\n            padding:${id[\"td_tag_cell\"]}px; border:0px solid ${id[\"td_tag_border_color\"]}; \n            border-right:${id[\"td_tag_border_right\"]}px solid ${id[\"td_tag_border_color\"]};\n            border-bottom:${id[\"td_tag_border_bottom\"]}px solid ${id[\"td_tag_border_color\"]};\n        }\n        table {\n            width: ${id[\"table_tag_width\"]};\n            margin: ${id[\"table_tag_text_align\"]};\n            border:1px solid ${id[\"table_tag_border_color\"]};\n            border-spacing: ${id[\"table_tag_cell\"]}px;\n            border-collapse: collapse;\n        }\n        ${div_css}\n        thread {\n            display: table-header-group;\n        }\n        tbody {\n            display: table-row-group;\n        }\n        tfoot {\n            display: table-footer-group\n        }\n        </style>\n        <script> \n        function deleteTrigger(stateId, command, id, dataid, count) {\n            var check = document.getElementById('delete' + count).checked;\n            if (ckeck) {\n                var data = {\n                    \"triggerid\": id,\n                    \"dataId\": dataid,\n                };\n                this.servConn._socket.emit(\"sendTo\", stateId, command, data);\n            }\n        }\n        function changeweekdays(stateId, command, dataid, id, changeid, type) {\n            if (type === \"OneTimeTrigger\") return;\n            var data = {\n                \"changeid\": changeid,\n                \"triggerid\": id,\n                \"dataid\": dataid\n            };\n            this.servConn._socket.emit(\"sendTo\", stateId, command, data);\n        }\n        function updateTrigger(stateId) {\n            this.servConn._socket.emit(\"setState\", stateId + '.html.update', true);\n        }\n        function setState(stateId, value) {\n            this.servConn._socket.emit(\"setState\", stateId, value == \"false\" ? false : true);\n        }\n        function sendToAstro(stateId, command, dataid, id, count) {\n            var timeselect = document.getElementById('timeselect' + count).value;\n            var shift = document.getElementById('shift' + count).value;\n            var data = {\n                \"astrotime\": timeselect,\n                \"shift\": shift,\n                \"triggerid\": id,\n                \"dataid\": dataid\n            };\n            this.servConn._socket.emit(\"sendTo\", stateId, command, data);\n        }\n        function sendToDateTime(stateId, command, id, dataid, count) {\n            var value = document.getElementById('datetime' + count).value;\n            var data = {\n                \"time\": value,\n                \"triggerid\": id,\n                \"dataid\": dataid\n            };\n            this.servConn._socket.emit(\"sendTo\", stateId, command, data);\n        }\n        function sendToTime(stateId, command, id, dataid, count) {\n            var value = document.getElementById('nexttime' + count).value;\n            var data = {\n                \"time\": value,\n                \"triggerid\": id,\n                \"dataid\": dataid\n            };\n            this.servConn._socket.emit(\"sendTo\", stateId, command, data);\n        }\n        </script>\n        ${div}\n        <table style=\"${min} width:${id[\"header_width\"]};\n        border:${id[\"header_border\"]}px; border-color:${id[\"header_tag_border_color\"]}; \n        font-size:${id[\"header_font_size\"]}px; font-family:${id[\"header_font_family\"]}; \n        background-image: linear-gradient(42deg,${id[\"header_linear_color_2\"]},\n        ${id[\"header_linear_color_1\"]});\">\n        <thead>\n        <tr>\n        <th colspan=\"10\" scope=\"colgroup\">\n        <p onClick=\"updateTrigger('${this.adapter.namespace}')\"\n        id=\"updatetime\" style=\"color:${id[\"top_text_color\"]}; font-family:${id[\"top_font_family\"]}; \n        font-size:${id[\"top_font_size\"]}px; font-weight:${id[\"top_font_weight\"]}\">\n        ${id[\"top_text\"]}&ensp;&ensp;${await this.helper_translator(\"top_last_update\")} \n        ${this.adapter.formatDate(new Date(), \"TT.MM.JJJJ hh:mm:ss\")}</p></th>\n        </tr>\n        <tr style=\"color:${id[\"headline_color\"]}; height:${id[\"headline_height\"]}px;\n        font-size: ${id[\"headline_font_size\"]}px; font-weight: ${id[\"headline_weight\"]}; \n        border-bottom: ${id[\"headline_underlined\"]}px solid ${id[\"headline_underlined_color\"]}\">\n        <th style=\"text-align:${id[\"column_align_01\"]}; width:${id[\"column_width_01\"]}\">\n        ${id[\"column_text_01\"]}\n        </th>\n        <th style=\"text-align:${id[\"column_align_02\"]}; width:${id[\"column_width_02\"]}\">\n        ${id[\"column_text_02\"]}\n        </th>\n        <th style=\"text-align:${id[\"column_align_03\"]}; width:${id[\"column_width_03\"]}\">\n        ${id[\"column_text_03\"]}\n        </th>\n        <th style=\"text-align:${id[\"column_align_04\"]}; width:${id[\"column_width_04\"]}\">\n        ${id[\"column_text_04\"]}\n        </th>\n        <th style=\"text-align:${id[\"column_align_05\"]}; width:${id[\"column_width_05\"]}\">\n        ${id[\"column_text_05\"]}\n        </th>\n        <th style=\"text-align:${id[\"column_align_06\"]}; width:${id[\"column_width_06\"]}\">\n        ${id[\"column_text_06\"]}\n        </th>\n        <th style=\"text-align:${id[\"column_align_07\"]}; width:${id[\"column_width_07\"]}\">\n        ${id[\"column_text_07\"]}\n        </th>\n        <th style=\"text-align:${id[\"column_align_08\"]}; width:${id[\"column_width_08\"]}\">\n        ${id[\"column_text_08\"]}\n        </th>\n        <th style=\"text-align:${id[\"column_align_09\"]}; width:${id[\"column_width_09\"]}\">\n        ${id[\"column_text_09\"]}\n        </th>\n        <th style=\"text-align:${id[\"column_align_10\"]}; width:${id[\"column_width_10\"]}\">\n        ${id[\"column_text_10\"]}\n        </th>\n        </tr>\n        </thead>\n        <tfoot>\n        <tr>\n        <th colspan=\"10\" scope=\"colgroup\">\n        <p style=\"color:${id[\"top_text_color\"]}; font-family:${id[\"top_font_family\"]}; \n        font-size:${id[\"top_font_size\"]}px; font-weight:${id[\"top_font_weight\"]}\">\n        ${await this.helper_translator(\"footerobject\")}&ensp;&ensp;${count}</br>\n        ${await this.helper_translator(\"footer\")}&ensp;&ensp;${countall}</p></th>\n        </tr>\n        </tfoot>\n        <tbody>\n        ${htmltext}\n        </tbody>\n        </table></div>`;\n        await this.adapter.setState(`html.html_code`, {\n            val: htmlStart,\n            ack: true,\n        });\n    }\n\n    private async helper_translator(word: string): Promise<string> {\n        const all: any = {\n            top_last_update: {\n                en: \"Last update:\",\n                de: \"Letzte Aktualisierung:\",\n                ru: \"\u041F\u043E\u0441\u043B\u0435\u0434\u043D\u0435\u0435 \u043E\u0431\u043D\u043E\u0432\u043B\u0435\u043D\u0438\u0435:\",\n                pt: \"\u00DAltima atualiza\u00E7\u00E3o:\",\n                nl: \"Laatste update:\",\n                fr: \"Derni\u00E8re mise \u00E0 jour :\",\n                it: \"Ultimo aggiornamento:\",\n                es: \"\u00DAltima actualizaci\u00F3n:\",\n                pl: \"Ostatnia aktualizacja\",\n                uk: \"\u041E\u0441\u0442\u0430\u043D\u043D\u0454 \u043E\u043D\u043E\u0432\u043B\u0435\u043D\u043D\u044F:\",\n                \"zh-cn\": \"\u4E0A\u6B21\u66F4\u65B0:\",\n            },\n            footer: {\n                en: \"Total trigger\",\n                de: \"Gesamtausl\u00F6sung\",\n                ru: \"\u041E\u0431\u0449\u0438\u0439 \u0442\u0440\u0438\u0433\u0433\u0435\u0440\",\n                pt: \"Total de gatilho\",\n                nl: \"Totaal trigger\",\n                fr: \"D\u00E9clencheur total\",\n                it: \"Attacco totale\",\n                es: \"Total disparador\",\n                pl: \"Wy\u0142\u0105cznik ca\u0142kowity\",\n                uk: \"\u0417\u0430\u0433\u0430\u043B\u044C\u043D\u0438\u0439 \u0442\u0440\u0438\u0433\u0435\u0440\",\n                \"zh-cn\": \"\u603B\u89E6\u53D1\u6570\",\n            },\n            footerobject: {\n                en: \"Total objects\",\n                de: \"Objekte insgesamt\",\n                ru: \"\u0412\u0441\u0435\u0433\u043E \u043E\u0431\u044A\u0435\u043A\u0442\u043E\u0432\",\n                pt: \"Objetos totais\",\n                nl: \"Totaal objecten\",\n                fr: \"Total des objets\",\n                it: \"Oggetti totali\",\n                es: \"Total de objetos\",\n                pl: \"Ca\u0142kowita liczba obiekt\u00F3w\",\n                uk: \"\u0412\u0441\u044C\u043E\u0433\u043E \u043E\u0431'\u0454\u043A\u0442\u0456\u0432\",\n                \"zh-cn\": \"\u76EE\u6807\u5171\u8BA1\",\n            },\n            sunrise: {\n                en: \"Sunrise\",\n                de: \"Sonnenaufgang\",\n                ru: \"\u0412\u043E\u0441\u0445\u043E\u0434\",\n                pt: \"Nascer do sol\",\n                nl: \"zonsopkomst\",\n                fr: \"lever du soleil\",\n                it: \"Alba\",\n                es: \"amanecer\",\n                pl: \"wsch\u00F3d s\u0142o\u0144ca\",\n                uk: \"\u0421\u0445\u0456\u0434 \u0441\u043E\u043D\u0446\u044F\",\n                \"zh-cn\": \"\u65E5\u51FA\",\n            },\n            sunset: {\n                en: \"Sunset\",\n                de: \"Sonnenuntergang\",\n                ru: \"\u0417\u0430\u043A\u0430\u0442 \u0441\u043E\u043B\u043D\u0446\u0430\",\n                pt: \"P\u00F4r do sol\",\n                nl: \"Zonsondergang\",\n                fr: \"Le coucher du soleil\",\n                it: \"Tramonto\",\n                es: \"Puesta de sol\",\n                pl: \"Zach\u00F3d s\u0142o\u0144ca\",\n                uk: \"\u0417\u0430\u0445\u0456\u0434 \u0441\u043E\u043D\u0446\u044F\",\n                \"zh-cn\": \"\u65E5\u843D\",\n            },\n            solarNoon: {\n                en: \"Noon\",\n                de: \"Mittag\",\n                ru: \"\u041F\u043E\u043B\u0434\u0435\u043D\u044C\",\n                pt: \"Meio-dia\",\n                nl: \"Middag\",\n                fr: \"Le midi\",\n                it: \"Mezzogiorno\",\n                es: \"Mediod\u00EDa\",\n                pl: \"Po\u0142udnie\",\n                uk: \"\u043F\u043E\u043B\u0443\u0434\u0435\u043D\u044C\",\n                \"zh-cn\": \"\u4E2D\u5348\",\n            },\n        };\n        this.adapter.log.debug(`Lang ${this.lang}`);\n        return all[word][this.lang];\n    }\n\n    public async createStates(lang: string): Promise<any> {\n        this.lang = lang;\n        this.adapter.log.info(`Create HTML states!`);\n        let common: any = {};\n        let val: ioBroker.State | null | undefined;\n        common = {\n            name: \"HTML\",\n            desc: \"HTML\",\n        };\n        await this.createDataPoint(\"html\", common, \"folder\");\n        common = {\n            type: \"string\",\n            role: \"level.color.rgb\",\n            name: {\n                en: \"Heading underlined color\",\n                de: \"Heading unterstrichene Farbe\",\n                ru: \"\u0417\u0430\u0433\u043E\u043B\u043E\u0432\u043E\u043A \u043F\u043E\u0434\u0447\u0435\u0440\u043A\u043D\u0443\u0442\u044B\u0439 \u0446\u0432\u0435\u0442\",\n                pt: \"Cor sublinhada de cabe\u00E7a\",\n                nl: \"Vertaling:\",\n                fr: \"T\u00EAte de couleur soulign\u00E9e\",\n                it: \"Intestazione colore sottolineato\",\n                es: \"Cabeza de color subrayado\",\n                pl: \"G\u0142owa podkre\u015Blona koloru\",\n                uk: \"\u041F\u043E\u0434\u0430\u0454\u0442\u044C\u0441\u044F \u0437\u0433\u0456\u0434\u043D\u043E \u0437 \u043A\u043E\u043B\u044C\u043E\u0440\u043E\u043C\",\n                \"zh-cn\": \"\u6807\u9898\u7A81\u51FA\u5F3A\u8C03\u989C\u8272\",\n            },\n            desc: \"Heading underlined color\",\n            read: true,\n            write: true,\n            def: \"#ffffff\",\n        };\n        await this.createDataPoint(\"html.headline_underlined_color\", common, \"state\");\n        val = await this.adapter.getStateAsync(\"html.headline_underlined_color\");\n        this.htmlVal[\"headline_underlined_color\"] = val?.val;\n        common = {\n            type: \"number\",\n            role: \"value\",\n            name: {\n                en: \"Heading underlined\",\n                de: \"Unterstrichen\",\n                ru: \"\u0417\u0430\u0433\u043E\u043B\u043E\u0432\u043E\u043A \u043F\u043E\u0434\u0447\u0435\u0440\u043A\u043D\u0443\u0442\",\n                pt: \"Rubrica sublinhada\",\n                nl: \"Ondersteuning\",\n                fr: \"Heading underlined\",\n                it: \"Denominazione sottolineata\",\n                es: \"Encabezamiento subrayado\",\n                pl: \"Headlong underlined\",\n                uk: \"\u041F\u043E\u0434\u0430\u0454\u0442\u044C\u0441\u044F \u0437\u0433\u0456\u0434\u043D\u043E \u0437\",\n                \"zh-cn\": \"\u6807\u9898\u5F3A\u8C03\",\n            },\n            desc: \"Heading underlined\",\n            read: true,\n            write: true,\n            def: 3,\n            unit: \"px\",\n        };\n        await this.createDataPoint(\"html.headline_underlined\", common, \"state\");\n        val = await this.adapter.getStateAsync(\"html.headline_underlined\");\n        this.htmlVal[\"headline_underlined\"] = val?.val;\n        common = {\n            type: \"string\",\n            role: \"state\",\n            name: {\n                en: \"Headline font weight\",\n                de: \"Headline Schriftst\u00E4rke\",\n                ru: \"\u0412\u0435\u0441 \u0448\u0440\u0438\u0444\u0442\u0430 \u0437\u0430\u0433\u043E\u043B\u043E\u0432\u043A\u0430\",\n                pt: \"Peso da fonte do t\u00EDtulo\",\n                nl: \"Hoofdlettertypegewicht\",\n                fr: \"Poids de la police en t\u00EAte\",\n                it: \"Headline font peso\",\n                es: \"Headline font weight\",\n                pl: \"Masa czcionki nag\u0142\u00F3wka\",\n                uk: \"\u0412\u0430\u0433\u0430 \u0448\u0440\u0438\u0444\u0442\u0443\",\n                \"zh-cn\": \"\u5934\u6761\u5B57\u4F53\u91CD\u91CF\",\n            },\n            desc: \"Headline font weight\",\n            read: true,\n            write: true,\n            def: \"normal\",\n            states: {\n                normal: \"normal\",\n                bold: \"bold\",\n            },\n        };\n        await this.createDataPoint(\"html.headline_weight\", common, \"state\");\n        val = await this.adapter.getStateAsync(\"html.headline_weight\");\n        this.htmlVal[\"headline_weight\"] = val?.val;\n        common = {\n            type: \"number\",\n            role: \"value\",\n            name: {\n                en: \"Headline font size\",\n                de: \"Headline Schriftgr\u00F6\u00DFe\",\n                ru: \"\u0420\u0430\u0437\u043C\u0435\u0440 \u0448\u0440\u0438\u0444\u0442\u0430 Headline\",\n                pt: \"Tamanho da fonte do t\u00EDtulo\",\n                nl: \"Hoofdlijn lettertype\",\n                fr: \"Headline font size\",\n                it: \"Formato del carattere\",\n                es: \"Tama\u00F1o de la fuente\",\n                pl: \"Fontanny\",\n                uk: \"\u0420\u043E\u0437\u043C\u0456\u0440 \u043E\u0441\u043D\u043E\u0432\u043D\u043E\u0433\u043E \u0448\u0440\u0438\u0444\u0442\u0443\",\n                \"zh-cn\": \"\u5BFC \u8A00\",\n            },\n            desc: \"Headline height\",\n            read: true,\n            write: true,\n            def: 16,\n            unit: \"px\",\n        };\n        await this.createDataPoint(\"html.headline_font_size\", common, \"state\");\n        val = await this.adapter.getStateAsync(\"html.headline_font_size\");\n        this.htmlVal[\"headline_font_size\"] = val?.val;\n        common = {\n            type: \"number\",\n            role: \"value\",\n            name: {\n                en: \"Headline height\",\n                de: \"Kopfh\u00F6he\",\n                ru: \"\u0412\u044B\u0441\u043E\u0442\u0430 \u0437\u0430\u0433\u043E\u043B\u043E\u0432\u043A\u0430\",\n                pt: \"Altura do t\u00EDtulo\",\n                nl: \"Hoofdlijn lengte\",\n                fr: \"Hauteur de la t\u00EAte\",\n                it: \"Altezza della testa\",\n                es: \"Altura del t\u00EDtulo\",\n                pl: \"Headline height\",\n                uk: \"\u0412\u0438\u0441\u043E\u0442\u0430 \u043B\u0456\u043D\u0456\u0457\",\n                \"zh-cn\": \"\u6807\u9898\u9AD8\",\n            },\n            desc: \"Headline height\",\n            read: true,\n            write: true,\n            def: 35,\n            unit: \"px\",\n        };\n        await this.createDataPoint(\"html.headline_height\", common, \"state\");\n        val = await this.adapter.getStateAsync(\"html.headline_height\");\n        this.htmlVal[\"headline_height\"] = val?.val;\n        common = {\n            type: \"string\",\n            role: \"level.color.rgb\",\n            name: {\n                en: \"Headline color\",\n                de: \"Kopffarbe\",\n                ru: \"\u0426\u0432\u0435\u0442 \u0437\u0430\u0433\u043E\u043B\u043E\u0432\u043A\u0430\",\n                pt: \"Cor do t\u00EDtulo\",\n                nl: \"Hoofdlijn kleur\",\n                fr: \"Couleur Headline\",\n                it: \"Colore della testa\",\n                es: \"Color de encabezado\",\n                pl: \"Kolor\",\n                uk: \"\u041A\u043E\u043B\u0456\u0440 \u043B\u0456\u043D\u0456\u0457\",\n                \"zh-cn\": \"\u6807\u9898\",\n            },\n            desc: \"Headline color\",\n            read: true,\n            write: true,\n            def: \"#ffffff\",\n        };\n        await this.createDataPoint(\"html.headline_color\", common, \"state\");\n        val = await this.adapter.getStateAsync(\"html.headline_color\");\n        this.htmlVal[\"headline_color\"] = val?.val;\n        common = {\n            type: \"string\",\n            role: \"state\",\n            name: {\n                en: \"TOP text\",\n                de: \"TOP-Text\",\n                ru: \"\u0422\u041E\u041F-\u0442\u0435\u043A\u0441\u0442\",\n                pt: \"Texto do TOP\",\n                nl: \"Top\",\n                fr: \"Texte TOP\",\n                it: \"Testo TOP\",\n                es: \"Texto de la p\u00E1gina\",\n                pl: \"Tekst TOP\",\n                uk: \"\u0413\u043E\u043B\u043E\u0432\u043D\u0430\",\n                \"zh-cn\": \"\u6848\u6587\",\n            },\n            desc: \"TOP text\",\n            read: true,\n            write: true,\n            def: \"your text\",\n        };\n        await this.createDataPoint(\"html.top_text\", common, \"state\");\n        val = await this.adapter.getStateAsync(\"html.top_text\");\n        this.htmlVal[\"top_text\"] = val?.val;\n        common = {\n            type: \"string\",\n            role: \"state\",\n            name: {\n                en: \"TOP font weight\",\n                de: \"TOP Schriftst\u00E4rke\",\n                ru: \"TOP \u0432\u0435\u0441 \u0448\u0440\u0438\u0444\u0442\u0430\",\n                pt: \"Peso da fonte TOP\",\n                nl: \"ToP font gewicht\",\n                fr: \"Poids de police TOP\",\n                it: \"TOP font peso\",\n                es: \"TOP font weight\",\n                pl: \"TOP\",\n                uk: \"\u041C\u0430\u043A\u0441\u0438\u043C\u0430\u043B\u044C\u043D\u0430 \u0432\u0430\u0433\u0430 \u0448\u0440\u0438\u0444\u0442\u0443\",\n                \"zh-cn\": \"\u6392 \u6743\",\n            },\n            desc: \"TOP font weight\",\n            read: true,\n            write: true,\n            def: \"normal\",\n            states: {\n                normal: \"normal\",\n                bold: \"bold\",\n            },\n        };\n        await this.createDataPoint(\"html.top_font_weight\", common, \"state\");\n        val = await this.adapter.getStateAsync(\"html.top_font_weight\");\n        this.htmlVal[\"top_font_weight\"] = val?.val;\n        common = {\n            type: \"number\",\n            role: \"value\",\n            name: {\n                en: \"TOP font size\",\n                de: \"TOP Schriftgr\u00F6\u00DFe\",\n                ru: \"TOP \u0440\u0430\u0437\u043C\u0435\u0440 \u0448\u0440\u0438\u0444\u0442\u0430\",\n                pt: \"Tamanho da fonte TOP\",\n                nl: \"ToP font maat\",\n                fr: \"Taille de police TOP\",\n                it: \"Dimensione del carattere TOP\",\n                es: \"Tama\u00F1o de fuente TOP\",\n                pl: \"TOP\",\n                uk: \"\u0420\u043E\u0437\u043C\u0456\u0440 \u0448\u0440\u0438\u0444\u0442\u0443\",\n                \"zh-cn\": \"\u6392 \u5EA6\",\n            },\n            desc: \"TOP font size\",\n            read: true,\n            write: true,\n            def: 20,\n            unit: \"px\",\n        };\n        await this.createDataPoint(\"html.top_font_size\", common, \"state\");\n        val = await this.adapter.getStateAsync(\"html.top_font_size\");\n        this.htmlVal[\"top_font_size\"] = val?.val;\n        common = {\n            type: \"string\",\n            role: \"state\",\n            name: {\n                en: \"TOP font\",\n                de: \"TOP Schriftart\",\n                ru: \"TOP \u0448\u0440\u0438\u0444\u0442\",\n                pt: \"Fonte TOP\",\n                nl: \"Top font\",\n                fr: \"Police TOP\",\n                it: \"TOP font\",\n                es: \"Fuente TOP\",\n                pl: \"TOP\",\n                uk: \"\u0422\u043E\u043F \u0448\u0440\u0438\u0444\u0442\",\n                \"zh-cn\": \"\u4E09\u3001\u7ED3 \u8BBA\",\n            },\n            desc: \"TOP font\",\n            read: true,\n            write: true,\n            def: \"Helvetica\",\n        };\n        await this.createDataPoint(\"html.top_font_family\", common, \"state\");\n        val = await this.adapter.getStateAsync(\"html.top_font_family\");\n        this.htmlVal[\"top_font_family\"] = val?.val;\n        common = {\n            type: \"string\",\n            role: \"level.color.rgb\",\n            name: {\n                en: \"TOP text color\",\n                de: \"TOP Textfarbe\",\n                ru: \"\u0422\u041E\u041F \u0446\u0432\u0435\u0442 \u0442\u0435\u043A\u0441\u0442\u0430\",\n                pt: \"Cor de texto TOP\",\n                nl: \"Top sms kleur\",\n                fr: \"Couleur du texte TOP\",\n                it: \"Colore del testo TOP\",\n                es: \"Color de texto\",\n                pl: \"Ok\u0142adka\",\n                uk: \"\u041A\u043E\u043B\u0456\u0440 \u0442\u0435\u043A\u0441\u0442\u0443\",\n                \"zh-cn\": \"\u6848\u6587\",\n            },\n            desc: \"TOP text color\",\n            read: true,\n            write: true,\n            def: \"#ffffff\",\n        };\n        await this.createDataPoint(\"html.top_text_color\", common, \"state\");\n        val = await this.adapter.getStateAsync(\"html.top_text_color\");\n        this.htmlVal[\"top_text_color\"] = val?.val;\n        common = {\n            type: \"string\",\n            role: \"level.color.rgb\",\n            name: {\n                en: \"TAG <table> header linear color 2.\",\n                de: \"TAG <table> Header lineare Farbe 2.\",\n                ru: \"TAG <table> \u043B\u0438\u043D\u0435\u0439\u043D\u044B\u0439 \u0446\u0432\u0435\u0442 2.\",\n                pt: \"Cor linear de cabe\u00E7alho TAG <table> 2.\",\n                nl: \"Tag <table> hoofd lineaire kleur 2.\",\n                fr: \"Couleur lin\u00E9aire TAG <table> en-t\u00EAte 2.\",\n                it: \"TAG <table> intestazione colore lineare 2.\",\n                es: \"TAG <table> Header linear color 2.\",\n                pl: \"TAG <table> koloru liniowego 2.\",\n                uk: \"TAG <table> \u0437\u0430\u0433\u043E\u043B\u043E\u0432\u043E\u043A \u043B\u0456\u043D\u0456\u0439\u043D\u043E\u0433\u043E \u043A\u043E\u043B\u044C\u043E\u0440\u0443 2.\",\n                \"zh-cn\": \"TAG <table>\u5934\u5BF8ar\u989C\u82722.\",\n            },\n            desc: \"TAG <table> header linear color 2.\",\n            read: true,\n            write: true,\n            def: \"#BDBDBD\",\n        };\n        await this.createDataPoint(\"html.header_linear_color_2\", common, \"state\");\n        val = await this.adapter.getStateAsync(\"html.header_linear_color_2\");\n        this.htmlVal[\"header_linear_color_2\"] = val?.val;\n        common = {\n            type: \"string\",\n            role: \"level.color.rgb\",\n            name: {\n                en: \"TAG <table> header linear color 1.\",\n                de: \"TAG <table> Header lineare Farbe 1.\",\n                ru: \"TAG <table> \u043B\u0438\u043D\u0435\u0439\u043D\u044B\u0439 \u0446\u0432\u0435\u0442 1.\",\n                pt: \"Cor linear de cabe\u00E7alho TAG <table> 1.\",\n                nl: \"Tag <table> hoofd lineaire kleur 1.\",\n                fr: \"Couleur lin\u00E9aire TAG <table> en-t\u00EAte 1.\",\n                it: \"TAG <table> intestazione colore lineare 1.\",\n                es: \"TAG <table> Header linear color 1.\",\n                pl: \"TAG <table> koloru liniowego 1.\",\n                uk: \"TAG <table> \u0437\u0430\u0433\u043E\u043B\u043E\u0432\u043E\u043A \u043B\u0456\u043D\u0456\u0439\u043D\u043E\u0433\u043E \u043A\u043E\u043B\u044C\u043E\u0440\u0443 1.\",\n                \"zh-cn\": \"TAG <table>\u5934\u5BF8ar\u989C\u82721.\",\n            },\n            desc: \"TAG <table> header linear color 1.\",\n            read: true,\n            write: true,\n            def: \"#BDBDBD\",\n        };\n        await this.createDataPoint(\"html.header_linear_color_1\", common, \"state\");\n        val = await this.adapter.getStateAsync(\"html.header_linear_color_1\");\n        this.htmlVal[\"header_linear_color_1\"] = val?.val;\n        common = {\n            type: \"string\",\n            role: \"state\",\n            name: {\n                en: \"TAG <table> header font family.\",\n                de: \"TAG <table> Header Schriftfamilie.\",\n                ru: \"TAG <table> \u0437\u0430\u0433\u043E\u043B\u043E\u0432\u043E\u043A \u0441\u0435\u043C\u0435\u0439\u0441\u0442\u0432\u0430 \u0448\u0440\u0438\u0444\u0442\u043E\u0432.\",\n                pt: \"TAG <table> header font family.\",\n                nl: \"TAG-lettertypefamilie <table>.\",\n                fr: \"Famille de polices d'en-t\u00EAte TAG <table>.\",\n                it: \"TAG <table> intestazione famiglia font.\",\n                es: \"TAG <table> header font family.\",\n                pl: \"Rodzina czcionek TAG <table>.\",\n                uk: \"TAG <table> \u0433\u043E\u043B\u043E\u0432\u043A\u0438 \u0441\u0456\u043C\u0435\u0439\u0441\u0442\u0432\u0430 \u0448\u0440\u0438\u0444\u0442\u0456\u0432.\",\n                \"zh-cn\": \"TAG<table>\u5934\u5B57\u4F53\u5BB6\u65CF.\",\n            },\n            desc: \"TAG <table> header font family.\",\n            read: true,\n            write: true,\n            def: \"Helvetica\",\n        };\n        await this.createDataPoint(\"html.header_font_family\", common, \"state\");\n        val = await this.adapter.getStateAsync(\"html.header_font_family\");\n        this.htmlVal[\"header_font_family\"] = val?.val;\n        common = {\n            type: \"number\",\n            role: \"value\",\n            name: {\n                en: \"TAG <table> header font size.\",\n                de: \"TAG <table> Header Schriftgr\u00F6\u00DFe.\",\n                ru: \"TAG <table> \u0440\u0430\u0437\u043C\u0435\u0440 \u0448\u0440\u0438\u0444\u0442\u0430.\",\n                pt: \"TAG <table> tamanho da fonte do cabe\u00E7alho.\",\n                nl: \"Tag <table> koper lettertype.\",\n                fr: \"TAG <table> header font size.\",\n                it: \"TAG <table> intestazione formato carattere.\",\n                es: \"TAG <table> header font size.\",\n                pl: \"TAG <table> \u2013 typ czcionki.\",\n                uk: \"TAG <table> \u0440\u043E\u0437\u043C\u0456\u0440 \u0437\u0430\u0433\u043E\u043B\u043E\u0432\u043A\u0430.\",\n                \"zh-cn\": \"TAG <table>\u540D\u5BFC\u5E08\u89C4\u6A21\u3002.\",\n            },\n            desc: \"TAG <table> header font size.\",\n            read: true,\n            write: true,\n            def: 15,\n            unit: \"px\",\n        };\n        await this.createDataPoint(\"html.header_font_size\", common, \"state\");\n        val = await this.adapter.getStateAsync(\"html.header_font_size\");\n        this.htmlVal[\"header_font_size\"] = val?.val;\n        common = {\n            type: \"number\",\n            role: \"value\",\n            name: {\n                en: \"TAG <table> header border.\",\n                de: \"TAG <table> Kopfgrenze.\",\n                ru: \"TAG <table> \u0433\u0440\u0430\u043D\u0438\u0446\u044B \u0437\u0430\u0433\u043E\u043B\u043E\u0432\u043A\u0430.\",\n                pt: \"TAG <table> fronteira de cabe\u00E7alho.\",\n                nl: \"TAG <table> hoofdgrens.\",\n                fr: \"TAG <table> t\u00EAte fronti\u00E8re.\",\n                it: \"TAG <table> bordo intestazione.\",\n                es: \"TAG <table> frontera de cabecera.\",\n                pl: \"TAG <table> \u2013 granica g\u0142odowa.\",\n                uk: \"TAG <table> \u0437\u0430\u0433\u043E\u043B\u043E\u0432\u043E\u043A \u043A\u043E\u0440\u0434\u043E\u043D\u0443.\",\n                \"zh-cn\": \"TAG <table>\u5934\u5BF8\u8FB9\u754C\u3002.\",\n            },\n            desc: \"TAG <table> header border.\",\n            read: true,\n            write: true,\n            def: 2,\n            unit: \"px\",\n        };\n        await this.createDataPoint(\"html.header_border\", common, \"state\");\n        val = await this.adapter.getStateAsync(\"html.header_border\");\n        this.htmlVal[\"header_border\"] = val?.val;\n        common = {\n            type: \"string\",\n            role: \"level.color.rgb\",\n            name: {\n                en: \"TAG <table> header border color.\",\n                de: \"TAG <table> Header Randfarbe.\",\n                ru: \"TAG <table> \u0446\u0432\u0435\u0442 \u0433\u0440\u0430\u043D\u0438\u0446\u044B \u0437\u0430\u0433\u043E\u043B\u043E\u0432\u043A\u0430.\",\n                pt: \"TAG <table> cor da borda do cabe\u00E7alho.\",\n                nl: \"TAG <table> hoofd grenskleur.\",\n                fr: \"TAG <table> couleur de la bordure d'en-t\u00EAte.\",\n                it: \"TAG <table> intestazione bordo colore.\",\n                es: \"TAG <table> de color de borde de cabecera.\",\n                pl: \"TAG <table> \u2013 kolor graniczny.\",\n                uk: \"TAG <table> \u0437\u0430\u0433\u043E\u043B\u043E\u0432\u043E\u043A \u043F\u0440\u0438\u043A\u043E\u0440\u0434\u043E\u043D\u043D\u043E\u0433\u043E \u043A\u043E\u043B\u044C\u043E\u0440\u0443.\",\n                \"zh-cn\": \"TAG <table>\u5934\u90BB\u3002.\",\n            },\n            desc: \"TAG <table> header border color.\",\n            read: true,\n            write: true,\n            def: \"#424242\",\n        };\n        await this.createDataPoint(\"html.header_tag_border_color\", common, \"state\");\n        val = await this.adapter.getStateAsync(\"html.header_tag_border_color\");\n        this.htmlVal[\"header_tag_border_color\"] = val?.val;\n        common = {\n            type: \"string\",\n            role: \"state\",\n            name: {\n                en: \"TAG <table> header width (e.g. auto, 100% or 1080px).\",\n                de: \"TAG <table> Kopfbreite (z.B. Auto, 100% oder 1080px.).\",\n                ru: \"TAG <table> \u0448\u0438\u0440\u0438\u043D\u0430 \u0437\u0430\u0433\u043E\u043B\u043E\u0432\u043A\u0430 (\u043D\u0430\u043F\u0440\u0438\u043C\u0435\u0440, \u0430\u0432\u0442\u043E, 100% \u0438\u043B\u0438 1080px.).\",\n                pt: \"TAG <table> largura do cabe\u00E7alho (por exemplo, auto, 100% ou 1080px.).\",\n                nl: \"TAG <table> koper width (e.g auto, 100% of 1080px).\",\n                fr: \"Largeur d'en-t\u00EAte TAG <table> (p. ex. auto, 100% ou 1080px.).\",\n                it: \"Larghezza intestazione TAG <table> (ad esempio auto, 100% o 1080px.).\",\n                es: \"TAG <table> ancho de cabecera (por ejemplo auto, 100% o 1080px.).\",\n                pl: \"TAG <table> (np. auto, 100% lub 1080 KM).\",\n                uk: \"TAG <table> \u0448\u0438\u0440\u0438\u043D\u0430 \u0437\u0430\u0433\u043E\u043B\u043E\u0432\u043A\u0430 (\u043D\u0430\u043F\u0440\u0438\u043A\u043B\u0430\u0434, \u0430\u0432\u0442\u043E\u043C\u0430\u0442\u0438\u0447\u043D\u0438\u0439, 100% \u0430\u0431\u043E 1080px).\",\n                \"zh-cn\": \"TAG <table> \u5934\u5DFE(\u5982\u6C7D\u8F66\u3001100%\u62161080px).\",\n            },\n            desc: \"TAG <table> header width (e.g. auto, 100% or 1080px).\",\n            read: true,\n            write: true,\n            def: \"auto\",\n        };\n        await this.createDataPoint(\"html.header_width\", common, \"state\");\n        val = await this.adapter.getStateAsync(\"html.header_width\");\n        this.htmlVal[\"header_width\"] = val?.val;\n        common = {\n            type: \"number\",\n            role: \"value\",\n            name: {\n                en: \"TAG <table> padding\",\n                de: \"TAG <table> Padding\",\n                ru: \"TAG <table> Padding\",\n                pt: \"TAG <table> padding\",\n                nl: \"TAG <table> opvulling\",\n                fr: \"Rembourrage TAG <table>\",\n                it: \"TAG <table> imbottitura\",\n                es: \"Acolchado <table> TAG\",\n                pl: \"TAG <table> wy\u015Bcie\u0142anie\",\n                uk: \"TAG <table> \u043D\u0430\u043F\u043E\u0432\u043D\u044E\u0432\u0430\u0447\",\n                \"zh-cn\": \"TAG <table> \u57AB\u88C5\",\n            },\n            desc: \"TAG <table> padding\",\n            read: true,\n            write: true,\n            def: 6,\n            unit: \"px\",\n        };\n        await this.createDataPoint(\"html.table_tag_cell\", common, \"state\");\n        val = await this.adapter.getStateAsync(\"html.table_tag_cell\");\n        this.htmlVal[\"table_tag_cell\"] = val?.val;\n        common = {\n            type: \"string\",\n            role: \"level.color.rgb\",\n            name: {\n                en: \"TAG <table> border color\",\n                de: \"TAG <table> Grenzfarbe\",\n                ru: \"TAG <table> \u043F\u043E\u0433\u0440\u0430\u043D\u0438\u0447\u043D\u044B\u0439 \u0446\u0432\u0435\u0442\",\n                pt: \"TAG <table> cor da borda\",\n                nl: \"TAG <tabel> randkleur\",\n                fr: \"Couleur de la bordure de TAG <table>\",\n                it: \"TAG <table> colore di confine\",\n                es: \"TAG - color de borde ajustable\",\n                pl: \"TAG < table > barwa graniczna\",\n                uk: \"TAG <table> \u0431\u043E\u0440\u0434\u043E\u0432\u0438\u0439 \u043A\u043E\u043B\u0456\u0440\",\n                \"zh-cn\": \"TAG < table > \u8FB9\u6846\u989C\u8272\",\n            },\n            desc: \"TAG <table> border color\",\n            read: true,\n            write: true,\n            def: \"#424242\",\n        };\n        await this.createDataPoint(\"html.table_tag_border_color\", common, \"state\");\n        val = await this.adapter.getStateAsync(\"html.table_tag_border_color\");\n        this.htmlVal[\"table_tag_border_color\"] = val?.val;\n        common = {\n            type: \"string\",\n            role: \"state\",\n            name: {\n                en: \"TAG <table> text align\",\n                de: \"TAG <table> Text ausrichten\",\n                ru: \"TAG <table> \u0442\u0435\u043A\u0441\u0442\",\n                pt: \"TAG <table> alinhamento de texto\",\n                nl: \"TAG <table> sms-align\",\n                fr: \"TAG <table> texte align\u00E9\",\n                it: \"TAG <table> testo allineare\",\n                es: \"TAG <table> texto alineado\",\n                pl: \"TAG <table> dopasowa\u0142\",\n                uk: \"TAG <table> \u0442\u0435\u043A\u0441\u0442 \u0432\u0438\u0440\u0456\u0432\u043D\u044E\u0432\u0430\u043D\u043D\u044F\",\n                \"zh-cn\": \"TAG<table>\u6848\u6587\",\n            },\n            desc: \"TAG <table> width\",\n            read: true,\n            write: true,\n            def: \"center\",\n            states: [\"center\", \"left\", \"right\", \"auto\"],\n        };\n        await this.createDataPoint(\"html.table_tag_text_align\", common, \"state\");\n        val = await this.adapter.getStateAsync(\"html.table_tag_text_align\");\n        this.htmlVal[\"table_tag_text_align\"] = val?.val;\n        common = {\n            type: \"string\",\n            role: \"state\",\n            name: {\n                en: \"TAG <table> width (e.g. auto or 100px)\",\n                de: \"TAG <table> Breite (z.B. Auto oder 100px)\",\n                ru: \"TAG <table> \u0448\u0438\u0440\u0438\u043D\u0430 (\u043D\u0430\u043F\u0440\u0438\u043C\u0435\u0440, \u0430\u0432\u0442\u043E \u0438\u043B\u0438 100px)\",\n                pt: \"TAG <table> largura (por exemplo, auto ou 100px)\",\n                nl: \"TAG <table> width (e.g auto of 100px)\",\n                fr: \"TAG <table> largeur (p. ex. auto ou 100px)\",\n                it: \"Larghezza TAG <table> (ad esempio auto o 100px)\",\n                es: \"TAG <table> ancho (por ejemplo auto o 100px)\",\n                pl: \"TAG <table> szeroko\u015B\u0107 (np. auto lub 100 KM)\",\n                uk: \"TAG <table> \u0448\u0438\u0440\u0438\u043D\u0430 (\u043D\u0430\u043F\u0440\u0438\u043A\u043B\u0430\u0434, \u0430\u0432\u0442\u043E \u0430\u0431\u043E 100px)\",\n                \"zh-cn\": \"TAG<table>\u59BB\u5B50(\u5982\u6C7D\u8F66\u6216100px)\",\n            },\n            desc: \"TAG <table> width (e.g. auto or 100px)\",\n            read: true,\n            write: true,\n            def: \"auto\",\n        };\n        await this.createDataPoint(\"html.table_tag_width\", common, \"state\");\n        val = await this.adapter.getStateAsync(\"html.table_tag_width\");\n        this.htmlVal[\"table_tag_width\"] = val?.val;\n        common = {\n            type: \"string\",\n            role: \"state\",\n            name: {\n                en: \"TAG <table> width (e.g. auto or 100px)\",\n                de: \"TAG <table> Breite (z.B. Auto oder 100px)\",\n                ru: \"TAG <table> \u0448\u0438\u0440\u0438\u043D\u0430 (\u043D\u0430\u043F\u0440\u0438\u043C\u0435\u0440, \u0430\u0432\u0442\u043E \u0438\u043B\u0438 100px)\",\n                pt: \"TAG <table> largura (por exemplo, auto ou 100px)\",\n                nl: \"TAG <table> width (e.g auto of 100px)\",\n                fr: \"TAG <table> largeur (p. ex. auto ou 100px)\",\n                it: \"Larghezza TAG <table> (ad esempio auto o 100px)\",\n                es: \"TAG <table> ancho (por ejemplo auto o 100px)\",\n                pl: \"TAG <table> szeroko\u015B\u0107 (np. auto lub 100 KM)\",\n                uk: \"TAG <table> \u0448\u0438\u0440\u0438\u043D\u0430 (\u043D\u0430\u043F\u0440\u0438\u043A\u043B\u0430\u0434, \u0430\u0432\u0442\u043E \u0430\u0431\u043E 100px)\",\n                \"zh-cn\": \"TAG<table>\u59BB\u5B50(\u5982\u6C7D\u8F66\u6216100px)\",\n            },\n            desc: \"TAG <table> width (e.g. auto or 100px)\",\n            read: true,\n            write: true,\n            def: \"auto\",\n        };\n        await this.createDataPoint(\"html.table_tag_width\", common, \"state\");\n        val = await this.adapter.getStateAsync(\"html.table_tag_width\");\n        this.htmlVal[\"table_tag_width\"] = val?.val;\n        common = {\n            type: \"string\",\n            role: \"level.color.rgb\",\n            name: {\n                en: \"TAG <td> border color\",\n                de: \"TAG <td> Grenzfarbe\",\n                ru: \"TAG <td> \u043F\u043E\u0433\u0440\u0430\u043D\u0438\u0447\u043D\u044B\u0439 \u0446\u0432\u0435\u0442\",\n                pt: \"TAG <td> cor da borda\",\n                nl: \"TAG <td> randkleur\",\n                fr: \"Couleur de la bordure de TAG <td>\",\n                it: \"TAG <td> colore di confine\",\n                es: \"TAG <td> color de borde\",\n                pl: \"TAG <td> kolor granic\",\n                uk: \"TAG <td> \u0431\u043E\u0440\u0434\u043E\u0432\u0438\u0439 \u043A\u043E\u043B\u0456\u0440\",\n                \"zh-cn\": \"TAG <td> \u8FB9\u6846\u989C\u8272\",\n            },\n            desc: \"TAG <td> border color\",\n            read: true,\n            write: true,\n            def: \"#424242\",\n        };\n        await this.createDataPoint(\"html.td_tag_border_color\", common, \"state\");\n        val = await this.adapter.getStateAsync(\"html.td_tag_border_color\");\n        this.htmlVal[\"td_tag_border_color\"] = val?.val;\n        common = {\n            type: \"number\",\n            role: \"value\",\n            name: {\n                en: \"TAG <td> border bottom\",\n                de: \"TAG <td> Randboden\",\n                ru: \"TAG <td> \u043F\u043E\u0433\u0440\u0430\u043D\u0438\u0447\u043D\u043E\u0435 \u0434\u043D\u043E\",\n                pt: \"TAG <td> fronteira inferior\",\n                nl: \"TAG <td> rand onder\",\n                fr: \"TAG <td> fond de bordure\",\n                it: \"TAG <td> fondo di confine\",\n                es: \"TAG <td> inferior de la frontera\",\n                pl: \"TAG <td> dolna granica\",\n                uk: \"TAG <td> \u0431\u043E\u0440\u0434\u043E\u0432\u0438\u0439 \u0434\u043D\u043E\",\n                \"zh-cn\": \"TAG <td> \u8FB9\u6846\u5E95\u90E8\",\n            },\n            desc: \"TAG <td> border bottom\",\n            read: true,\n            write: true,\n            def: 1,\n            unit: \"px\",\n        };\n        await this.createDataPoint(\"html.td_tag_border_bottom\", common, \"state\");\n        val = await this.adapter.getStateAsync(\"html.td_tag_border_bottom\");\n        this.htmlVal[\"td_tag_border_bottom\"] = val?.val;\n        common = {\n            type: \"number\",\n            role: \"value\",\n            name: {\n                en: \"TAG <td> border right\",\n                de: \"TAG <td> Grenze rechts\",\n                ru: \"TAG <td> \u043F\u043E\u0433\u0440\u0430\u043D\u0438\u0447\u043D\u043E\u0435 \u043F\u0440\u0430\u0432\u043E\",\n                pt: \"TAG <td> fronteira direita\",\n                nl: \"TAG <td> randrechts\",\n                fr: \"TAG <td> fronti\u00E8re droite\",\n                it: \"TAG <td> diritto di frontiera\",\n                es: \"TAG <td> border right\",\n                pl: \"TAG <td> prawo graniczne\",\n                uk: \"TAG <td> \u043A\u043E\u0440\u0434\u043E\u043D \u043F\u0440\u044F\u043C\u043E\",\n                \"zh-cn\": \"TAG <td> \u53F3\u8FB9\u8FB9\u6846\",\n            },\n            desc: \"TAG <td> border right\",\n            read: true,\n            write: true,\n            def: 1,\n            unit: \"px\",\n        };\n        await this.createDataPoint(\"html.td_tag_border_right\", common, \"state\");\n        val = await this.adapter.getStateAsync(\"html.td_tag_border_right\");\n        this.htmlVal[\"td_tag_border_right\"] = val?.val;\n        common = {\n            type: \"number\",\n            role: \"value\",\n            name: {\n                en: \"TAG <td> padding\",\n                de: \"TAG <td> Padding\",\n                ru: \"TAG <td> Padding\",\n                pt: \"TAG <td> padding\",\n                nl: \"TAG <td> opvulling\",\n                fr: \"Rembourrage TAG <td>\",\n                it: \"TAG <td> imbottitura\",\n                es: \"Acolchado <td> TAG\",\n                pl: \"TAG < td > wy\u015Bcie\u0142anie\",\n                uk: \"TAG <td> \u043D\u0430\u043F\u043E\u0432\u043D\u044E\u0432\u0430\u0447\",\n                \"zh-cn\": \"TAG <td> \u57AB\u88C5\",\n            },\n            desc: \"TAG <td> padding\",\n            read: true,\n            write: true,\n            def: 6,\n            unit: \"px\",\n        };\n        await this.createDataPoint(\"html.td_tag_cell\", common, \"state\");\n        val = await this.adapter.getStateAsync(\"html.td_tag_cell\");\n        this.htmlVal[\"td_tag_cell\"] = val?.val;\n        common = {\n            type: \"string\",\n            role: \"state\",\n            name: {\n                en: \"Text align <p>\",\n                de: \"Textausrichtung <p>\",\n                ru: \"\u0422\u0435\u043A\u0441\u0442\u043E\u0432\u043E\u0435 \u0432\u044B\u0440\u0430\u0432\u043D\u0438\u0432\u0430\u043D\u0438\u0435 <p>\",\n                pt: \"Alinhamento de texto <p>\",\n                nl: \"Tekstuitlijning <p>\",\n                fr: \"Alignement du texte <p>\",\n                it: \"Allineamento del testo <p>\",\n                es: \"Texto alineado <p>\",\n                pl: \"Tekst wyr\u00F3wnania <p>\",\n                uk: \"\u0422\u0435\u043A\u0441\u0442\u043E\u0432\u0435 \u0432\u0438\u0440\u0456\u0432\u043D\u044E\u0432\u0430\u043D\u043D\u044F <p>\",\n                \"zh-cn\": \"\u6587\u672C\u5BF9\u9F50<p>\",\n            },\n            desc: \"Text align <p>\",\n            read: true,\n            write: true,\n            def: \"center\",\n            states: [\"center\", \"left\", \"right\", \"auto\"],\n        };\n        await this.createDataPoint(\"html.p_tag_text_algin\", common, \"state\");\n        val = await this.adapter.getStateAsync(\"html.p_tag_text_algin\");\n        this.htmlVal[\"p_tag_text_algin\"] = val?.val;\n        common = {\n            type: \"string\",\n            role: \"state\",\n            name: {\n                en: \"Font color enabled\",\n                de: \"Schriftfarbe aktiviert\",\n                ru: \"\u0412\u0441\u0442\u0440\u043E\u0435\u043D\u043D\u044B\u0439 \u0446\u0432\u0435\u0442\",\n                pt: \"Cor da fonte habilitada\",\n                nl: \"Lettertypekleur ingeschakeld\",\n                fr: \"Couleur de la police activ\u00E9e\",\n                it: \"Colore del carattere abilitato\",\n                es: \"Color de fuente habilitado\",\n                pl: \"Kolor czcionki w\u0142\u0105czony\",\n                uk: \"\u0423\u0432\u0456\u043C\u043A\u043D\u0443\u0442\u0438 \u043A\u043E\u043B\u0456\u0440 \u0448\u0440\u0438\u0444\u0442\u0443\",\n                \"zh-cn\": \"\u5B57\u4F53\u5DF2\u542F\u7528\",\n            },\n            desc: \"Font color enabled\",\n            read: true,\n            write: true,\n            def: \"yellow\",\n        };\n        await this.createDataPoint(\"html.font_color_text_enabled\", common, \"state\");\n        val = await this.adapter.getStateAsync(\"html.font_color_text_enabled\");\n        this.htmlVal[\"font_color_text_enabled\"] = val?.val;\n        common = {\n            type: \"boolean\",\n            role: \"button\",\n            name: {\n                en: \"Update\",\n                de: \"Aktualisierung\",\n                ru: \"\u041E\u0431\u043D\u043E\u0432\u043B\u0435\u043D\u0438\u0435\",\n                pt: \"Atualiza\u00E7\u00E3o\",\n                nl: \"Bijwerken\",\n                fr: \"Mise \u00E0 jour\",\n                it: \"Aggiornamento\",\n                es: \"Actualizaci\u00F3n\",\n                pl: \"Aktualizacja\",\n                uk: \"\u041D\u043E\u0432\u0438\u043D\u0438\",\n                \"zh-cn\": \"\u66F4\u65B0\",\n            },\n            desc: \"Update\",\n            read: true,\n            write: true,\n            def: false,\n        };\n        await this.createDataPoint(\"html.update\", common, \"state\");\n        common = {\n            type: \"string\",\n            role: \"state\",\n            name: {\n                en: \"Font color disabled\",\n                de: \"Schriftfarbe deaktiviert\",\n                ru: \"\u0426\u0432\u0435\u0442 \u0444\u043E\u043D\u0430 \u043E\u0442\u043A\u043B\u044E\u0447\u0435\u043D\",\n                pt: \"Cor da fonte desativada\",\n                nl: \"Lettertypekleur uitgeschakeld\",\n                fr: \"Couleur de la police d\u00E9sactiv\u00E9e\",\n                it: \"Colore del carattere disattivato\",\n                es: \"Color de la fuente deshabilitado\",\n                pl: \"Kolor czcionki wy\u0142\u0105czony\",\n                uk: \"\u041A\u043E\u043B\u0456\u0440 \u0448\u0440\u0438\u0444\u0442\u0443 \u0432\u0438\u043C\u043A\u043D\u0435\u043D\u043E\",\n                \"zh-cn\": \"\u5B57\u4F53\u5DF2\u7981\u7528\",\n            },\n            desc: \"Font color disabled\",\n            read: true,\n            write: true,\n            def: \"red\",\n        };\n        await this.createDataPoint(\"html.font_color_text_disabled\", common, \"state\");\n        val = await this.adapter.getStateAsync(\"html.font_color_text_disabled\");\n        this.htmlVal[\"font_color_text_disabled\"] = val?.val;\n        common = {\n            type: \"string\",\n            role: \"state\",\n            name: {\n                en: \"Font color weekdays enabled\",\n                de: \"Schriftfarbe Wochentage aktiviert\",\n                ru: \"\u0426\u0432\u0435\u0442 \u043F\u0435\u043D\u0442\u0430 \u0432\u043A\u043B\u044E\u0447\u0435\u043D\",\n                pt: \"Dia da semana colorida da fonte habilitado\",\n                nl: \"Lettertypekleur weekdagen ingeschakeld\",\n                fr: \"Couleur de la police en semaine activ\u00E9e\",\n                it: \"Colore del carattere giorni della settimana abilitati\",\n                es: \"D\u00EDas semanales de color de fuente habilitados\",\n                pl: \"Kolor czcionki dni tygodnia w\u0142\u0105czone\",\n                uk: \"\u0412\u0432\u0456\u043C\u043A\u043D\u0443\u0442\u0438 \u043A\u043E\u043B\u044C\u043E\u0440\u043E\u0432\u0456 \u0434\u0430\u0442\u0438\",\n                \"zh-cn\": \"\u542F\u7528\u5B57\u4F53\u989C\u8272\u5DE5\u4F5C\u65E5\",\n            },\n            desc: \"Font color weekdays enabled\",\n            read: true,\n            write: true,\n            def: \"yellow\",\n        };\n        await this.createDataPoint(\"html.font_color_weekdays_enabled\", common, \"state\");\n        val = await this.adapter.getStateAsync(\"html.font_color_weekdays_enabled\");\n        this.htmlVal[\"font_color_weekdays_enabled\"] = val?.val;\n        common = {\n            type: \"string\",\n            role: \"state\",\n            name: {\n                en: \"Font color weekdays disabled\",\n                de: \"Schriftfarbe Wochentage deaktiviert\",\n                ru: \"\u0426\u0432\u0435\u0442 \u043F\u0435\u043D\u0442\u0430 \u0431\u0443\u0434\u043D\u044F \u043E\u0442\u043A\u043B\u044E\u0447\u0435\u043D\",\n                pt: \"Dia da semana de cor da fonte desativado\",\n                nl: \"Lettertypekleur weekdagen uitgeschakeld\",\n                fr: \"Police couleur en semaine d\u00E9sactiv\u00E9e\",\n                it: \"Colore del carattere giorni della settimana disabilitati\",\n                es: \"Font color weekdays disabled\",\n                pl: \"Kolor czcionki dni tygodnia wy\u0142\u0105czone\",\n                uk: \"\u0424\u043E\u043D\u0442\u0430\u043D \u043A\u043E\u043B\u044C\u043E\u0440\u043E\u0432\u0438\u0439 \u0442\u0438\u0436\u0434\u0435\u043D\u044C \u0432\u0456\u0434\u043A\u043B\u044E\u0447\u0435\u043D\u043D\u044F\",\n                \"zh-cn\": \"\u5B57\u4F53\u989C\u8272\u5DE5\u4F5C\u65E5\u5DF2\u7981\u7528\",\n            },\n            desc: \"Font color weekdays disabled\",\n            read: true,\n            write: true,\n            def: \"red\",\n        };\n        await this.createDataPoint(\"html.font_color_weekdays_disabled\", common, \"state\");\n        val = await this.adapter.getStateAsync(\"html.font_color_weekdays_disabled\");\n        this.htmlVal[\"font_color_weekdays_disabled\"] = val?.val;\n        const states = [\"\uD83D\uDFE1\", \"\u26AA\", \"\u2705\", \"\u274C\", \"\u26AA\", \"\u26AB\", \"\u2B55\", \"\uD83D\uDD34\", \"\uD83D\uDD35\", \"\u23F1\", \"\uD83D\uDC80\", \"\uD83D\uDC4D\", \"\uD83D\uDC4E\", \"\uD83D\uDCD1\", \"\uD83D\uDCB2\", \"\uD83D\uDC40\"];\n        common = {\n            type: \"string\",\n            role: \"state\",\n            name: {\n                en: \"Icon for TRUE\",\n                de: \"Icon f\u00FCr TRUE\",\n                ru: \"\u0418\u043A\u043E\u043D\u0430 \u0434\u043B\u044F TRUE\",\n                pt: \"\u00CDcone para TRUE\",\n                nl: \"Pictogram voor WAAR\",\n                fr: \"Ic\u00F4ne pour TRUE\",\n                it: \"Icona per TRUE\",\n                es: \"Icono para TRUE\",\n                pl: \"Ikona dla TRUE\",\n                uk: \"\u0406\u043A\u043E\u043D\u0430 \u0434\u043B\u044F TRUE\",\n                \"zh-cn\": \"TRUE \u56FE\u6807\",\n            },\n            desc: \"Icon for TRUE\",\n            read: true,\n            write: true,\n            def: \"\uD83D\uDFE1\",\n            states: states,\n        };\n        await this.createDataPoint(\"html.icon_true\", common, \"state\");\n        val = await this.adapter.getStateAsync(\"html.icon_true\");\n        this.htmlVal[\"icon_true\"] = val?.val;\n        common = {\n            type: \"string\",\n            role: \"state\",\n            name: {\n                en: \"Icon for FALSE\",\n                de: \"Icon f\u00FCr FALSE\",\n                ru: \"\u0418\u043A\u043E\u043D\u0430 \u0434\u043B\u044F FALSE\",\n                pt: \"\u00CDcone para FALSE\",\n                nl: \"Pictogram voor FALSE\",\n                fr: \"Ic\u00F4ne pour FALSE\",\n                it: \"Icona per FALSE\",\n                es: \"Icono para FALSE\",\n                pl: \"Ikona FALSE\",\n                uk: \"\u0406\u043A\u043E\u043D\u0430 \u043F\u0456\u0434 FALSE\",\n                \"zh-cn\": \"FALSE \u56FE\u6807\",\n            },\n            desc: \"Icon for FALSE\",\n            read: true,\n            write: true,\n            def: \"\u26AA\",\n            states: states,\n        };\n        await this.createDataPoint(\"html.icon_false\", common, \"state\");\n        val = await this.adapter.getStateAsync(\"html.icon_false\");\n        this.htmlVal[\"icon_false\"] = val?.val;\n        common = {\n            type: \"string\",\n            role: \"state\",\n            name: {\n                en: \"Switch symbol\",\n                de: \"Schaltersymbol\",\n                ru: \"\u0421\u0438\u043C\u0432\u043E\u043B \u043F\u0435\u0440\u0435\u043A\u043B\u044E\u0447\u0430\u0442\u0435\u043B\u044F\",\n                pt: \"S\u00EDmbolo de interruptor\",\n                nl: \"Switch symbool\",\n                fr: \"Symbole de commutation\",\n                it: \"Simbolo di commutazione\",\n                es: \"Signatura del interruptor\",\n                pl: \"Symbol prze\u0142\u0105cznika\",\n                uk: \"\u0421\u0438\u043C\u0432\u043E\u043B \u043F\u0435\u0440\u0435\u043C\u0438\u043A\u0430\u043D\u043D\u044F\",\n                \"zh-cn\": \"\u5207\u6362\u7B26\u53F7\",\n            },\n            desc: \"Switch symbol\",\n            read: true,\n            write: true,\n            def: \"\u23F1\",\n            states: states,\n        };\n        await this.createDataPoint(\"html.icon_switch_symbol\", common, \"state\");\n        val = await this.adapter.getStateAsync(\"html.icon_switch_symbol\");\n        this.htmlVal[\"icon_switch_symbol\"] = val?.val;\n        const text = [\"Schedule\", \"Devices\", \"Switch\", \"Mo\", \"Tu\", \"We\", \"Th\", \"Fr\", \"Sa\", \"Su\"];\n        for (let i = 1; i < 11; i++) {\n            common = {\n                type: \"string\",\n                role: \"state\",\n                name: {\n                    en: `Column ${i} align`,\n                    de: `Spalte ${i} ausrichten`,\n                    ru: `\u041A\u043E\u043B\u043E\u043D\u043A\u0430 ${i}`,\n                    pt: `Coluna ${i}`,\n                    nl: `Kolom ${i} uitlijnen`,\n                    fr: `Colonne ${i} aligner`,\n                    it: `Colonna ${i} allineare`,\n                    es: `Columna ${i} alinear`,\n                    pl: `Kolumna ${i} wyr\u00F3wna\u0107`,\n                    uk: `\u041A\u043E\u043B\u043E\u043D\u043A\u0430 ${i} \u0432\u0438\u0440\u0456\u0432\u043D\u044E\u0432\u0430\u043D\u043D\u044F`,\n                    \"zh-cn\": `\u5217 ${i} \u5BF9\u9F50`,\n                },\n                desc: `column ${i} align`,\n                read: true,\n                write: true,\n                def: \"center\",\n                states: [\"center\", \"left\", \"right\", \"auto\"],\n            };\n            await this.createDataPoint(`html.column_align_${i.toString().padStart(2, \"0\")}`, common, \"state\");\n            val = await this.adapter.getStateAsync(`html.column_align_${i.toString().padStart(2, \"0\")}`);\n            this.htmlVal[`column_align_${i.toString().padStart(2, \"0\")}`] = val?.val;\n            common = {\n                type: \"string\",\n                role: \"state\",\n                name: {\n                    en: `Column ${i} width (auto, px or %)`,\n                    de: `Spalte ${i} Breite (auto, px oder %)`,\n                    ru: `\u041A\u043E\u043B\u043E\u043D\u043A\u0430 ${i} \u0428\u0438\u0440\u0438\u043D\u0430 (\u0430\u0432\u0442\u043E, px \u0438\u043B\u0438 %)`,\n                    pt: `Coluna ${i} largura (auto, px ou %)`,\n                    nl: `Kolom ${i} breedte (auto, px of %)`,\n                    fr: `Colonne {i} largeur (auto, px ou %)`,\n                    it: `Colonna ${i} larghezza (auto, px o %)`,\n                    es: `Columna ${i} ancho (auto, px o %)`,\n                    pl: `Kolumna ${i} szeroko\u015B\u0107 (auto, px lub%)`,\n                    uk: `\u041A\u043E\u043B\u043E\u043D\u043A\u0430 ${i} \u0448\u0438\u0440\u0438\u043D\u0430 (auto, px \u0430\u0431\u043E %)`,\n                    \"zh-cn\": `\u680F ${i} \u5BBD\u5EA6 (\u81EA\u52A8\u3001 px \u6216%)`,\n                },\n                desc: `Column ${i} width (auto, px or %)`,\n                read: true,\n                write: true,\n                def: \"auto\",\n            };\n            await this.createDataPoint(`html.column_width_${i.toString().padStart(2, \"0\")}`, common, \"state\");\n            val = await this.adapter.getStateAsync(`html.column_width_${i.toString().padStart(2, \"0\")}`);\n            this.htmlVal[`column_width_${i.toString().padStart(2, \"0\")}`] = val?.val;\n            common = {\n                type: \"string\",\n                role: \"state\",\n                name: {\n                    en: `Column ${i} text`,\n                    de: `Spalte ${i} Text`,\n                    ru: `\u041A\u043E\u043B\u043E\u043D\u043A\u0430 ${i} \u0442\u0435\u043A\u0441\u0442`,\n                    pt: `Coluna ${i} texto`,\n                    nl: `Kolom ${i} tekst`,\n                    fr: `Texte de la colonne ${i}`,\n                    it: `Colonna ${i} testo`,\n                    es: `Columna ${i} texto`,\n                    pl: `Tekst w kolumnie ${i}`,\n                    uk: `\u041A\u043E\u043B\u043E\u043D\u043A\u0430 ${i} \u0442\u0435\u043A\u0441\u0442`,\n                    \"zh-cn\": `\u5217 ${i} \u6587\u672C`,\n                },\n                desc: `Column ${i} text`,\n                read: true,\n                write: true,\n                def: text[i - 1],\n            };\n            await this.createDataPoint(`html.column_text_${i.toString().padStart(2, \"0\")}`, common, \"state\");\n            val = await this.adapter.getStateAsync(`html.column_text_${i.toString().padStart(2, \"0\")}`);\n            this.htmlVal[`column_text_${i.toString().padStart(2, \"0\")}`] = val?.val;\n            common = {\n                type: \"string\",\n                role: \"state\",\n                name: {\n                    en: `Alignment of row in column ${i}`,\n                    de: `Ausrichtung der Zeile in Spalte ${i}`,\n                    ru: `\u0420\u0430\u0437\u043C\u0435\u0449\u0435\u043D\u0438\u0435 \u0441\u0442\u0440\u043E\u043A\u0438 \u0432 \u043A\u043E\u043B\u043E\u043D\u043A\u0435 ${i}`,\n                    pt: `Alinhamento da linha na coluna ${i}`,\n                    nl: `Uitlijning van rij in kolom ${i}`,\n                    fr: `Alignement de la ligne dans la colonne ${i}`,\n                    it: `Allineamento della riga nella colonna ${i}`,\n                    es: `Alineaci\u00F3n de fila en la columna ${i}`,\n                    pl: `Dostosowanie wiersza w kolumnie ${i}`,\n                    uk: `\u0412\u0438\u0440\u0456\u0432\u043D\u044E\u0432\u0430\u043D\u043D\u044F \u0440\u044F\u0434\u0443 \u0432 \u043A\u043E\u043B\u043E\u043D\u0446\u0456 ${i}`,\n                    \"zh-cn\": `\u680F ${i} \u884C\u5BF9\u9F50`,\n                },\n                desc: `Alignment of row in column ${i}`,\n                read: true,\n                write: true,\n                def: \"left\",\n                states: [\"center\", \"left\", \"right\", \"auto\"],\n            };\n            await this.createDataPoint(`html.column_align_row_${i.toString().padStart(2, \"0\")}`, common, \"state\");\n            val = await this.adapter.getStateAsync(`html.column_align_row_${i.toString().padStart(2, \"0\")}`);\n            this.htmlVal[`column_align_row_${i.toString().padStart(2, \"0\")}`] = val?.val;\n        }\n        common = {\n            type: \"string\",\n            role: \"state\",\n            name: {\n                en: \"Background color (even)\",\n                de: \"Hintergrundfarbe (gerade)\",\n                ru: \"\u0424\u043E\u043D\u043E\u0432\u044B\u0439 \u0446\u0432\u0435\u0442 (\u0434\u0430\u0436\u0435)\",\n                pt: \"Cor de fundo (even)\",\n                nl: \"Achtergrondkleur (even)\",\n                fr: \"Couleur de fond (m\u00EAme)\",\n                it: \"Colore sfondo (anche)\",\n                es: \"Color de fondo (incluso)\",\n                pl: \"Kolor t\u0142a (parzysty)\",\n                uk: \"\u041A\u043E\u043B\u0456\u0440 \u0444\u043E\u043D\u0443 (\u043D\u0430\u0432\u0456\u0442\u044C)\",\n                \"zh-cn\": \"\u80CC\u666F\u989C\u8272( \u5076\u6570)\",\n            },\n            desc: \"Background color (even)\",\n            read: true,\n            write: true,\n            def: \"#1E1E1E\",\n        };\n        await this.createDataPoint(\"html.background_color_even\", common, \"state\");\n        val = await this.adapter.getStateAsync(\"html.background_color_even\");\n        this.htmlVal[\"background_color_even\"] = val?.val;\n        common = {\n            type: \"string\",\n            role: \"state\",\n            name: {\n                en: \"Background color (odd)\",\n                de: \"Hintergrundfarbe (ungerade)\",\n                ru: \"\u0424\u043E\u043D\u043E\u0432\u044B\u0439 \u0446\u0432\u0435\u0442 (odd)\",\n                pt: \"Cor de fundo (odd)\",\n                nl: \"Achtergrondkleur (odd)\",\n                fr: \"Couleur de fond (odd)\",\n                it: \"Colore dello sfondo (odd)\",\n                es: \"Color de fondo (odd)\",\n                pl: \"Kolor t\u0142a (nieparzysty)\",\n                uk: \"\u041A\u043E\u043B\u0456\u0440 \u0444\u043E\u043D\u0443 (\u043E\u0434)\",\n                \"zh-cn\": \"\u80CC\u666F\u989C\u8272( \u5947\u6570)\",\n            },\n            desc: \"Background color (odd)\",\n            read: true,\n            write: true,\n            def: \"#18171C\",\n        };\n        await this.createDataPoint(\"html.background_color_odd\", common, \"state\");\n        val = await this.adapter.getStateAsync(\"html.background_color_odd\");\n        this.htmlVal[\"background_color_odd\"] = val?.val;\n        common = {\n            type: \"string\",\n            role: \"state\",\n            name: {\n                en: \"Background color trigger\",\n                de: \"Hintergrundfarbe Trigger\",\n                ru: \"\u0424\u043E\u043D\u043E\u0432\u044B\u0439 \u0446\u0432\u0435\u0442 \u0442\u0440\u0438\u0433\u0433\u0435\u0440\",\n                pt: \"Gatilho de cor de fundo\",\n                nl: \"Achtergrondkleur\",\n                fr: \"D\u00E9clencheur de couleur de fond\",\n                it: \"Innesco del colore di sfondo\",\n                es: \"Color de fondo disparador\",\n                pl: \"Kolor t\u0142a wyzwalacz\",\n                uk: \"\u041F\u0456\u0434\u0437\u0435\u043C\u043D\u0438\u0439 \u043A\u043E\u043B\u0456\u0440\u043D\u0438\u0439 \u0442\u0440\u0438\u0433\u0435\u0440\",\n                \"zh-cn\": \"\u80CC\u666F\u989C\u8272\u89E6\u53D1\",\n            },\n            desc: \"Background color trigger\",\n            read: true,\n            write: true,\n            def: \"#000000\",\n        };\n        await this.createDataPoint(\"html.background_color_trigger\", common, \"state\");\n        val = await this.adapter.getStateAsync(\"html.background_color_trigger\");\n        this.htmlVal[\"background_color_trigger\"] = val?.val;\n        common = {\n            type: \"string\",\n            role: \"state\",\n            name: {\n                en: \"Background color body\",\n                de: \"Hintergrundfarbe Body\",\n                ru: \"\u0424\u043E\u043D\u043E\u0432\u044B\u0439 \u0446\u0432\u0435\u0442 \u0442\u0435\u043B\u0430\",\n                pt: \"Corpo de cor de fundo\",\n                nl: \"Achtergrondkleur\",\n                fr: \"Corps de couleur de fond\",\n                it: \"Corpo di colore di sfondo\",\n                es: \"Cuerpo de color de fondo\",\n                pl: \"Kolor t\u0142a cia\u0142a\",\n                uk: \"\u041F\u0456\u0434\u0437\u0435\u043C\u043D\u0438\u0439 \u043A\u043E\u043B\u0456\u0440 \u0442\u0456\u043B\u0430\",\n                \"zh-cn\": \"\u80CC\u666F\u989C\u8272\u6B63\u6587\",\n            },\n            desc: \"Background color body\",\n            read: true,\n            write: true,\n            def: \"#000000\",\n        };\n        await this.createDataPoint(\"html.background_color_body\", common, \"state\");\n        val = await this.adapter.getStateAsync(\"html.background_color_body\");\n        this.htmlVal[\"background_color_body\"] = val?.val;\n        common = {\n            type: \"boolean\",\n            role: \"switch\",\n            name: {\n                en: \"Disable div.containers for jarvis\",\n                de: \"Div.container f\u00FCr Jarvis deaktivieren\",\n                ru: \"\u041E\u0442\u043A\u043B\u044E\u0447\u0438\u0442\u044C div.containers \u0434\u043B\u044F jarvis\",\n                pt: \"Desativar div.containers para jarvis\",\n                nl: \"Disable div-containers\",\n                fr: \"Disable div.containers for jarvis\",\n                it: \"Disabilita div.containers per jarvis\",\n                es: \"Desactivar div.containers para jarvis\",\n                pl: \"Niezdolne div.containery dla jarvis\u00F3w\",\n                uk: \"\u0412\u0438\u043C\u043A\u043D\u0435\u043D\u0456 \u0434\u0438\u0432.\u043A\u043E\u043D\u0442\u0435\u0439\u043D\u0435\u0440\u0438 \u0434\u043B\u044F \u0431\u0430\u043D\u0456\",\n                \"zh-cn\": \"A. \u53EF\u4EE5\u533A\u5206\u7684 div. jarvis\u7684\u62D8\u7559\u8005\",\n            },\n            desc: \"Disable div.containers for jarvis\",\n            read: true,\n            write: true,\n            def: false,\n        };\n        await this.createDataPoint(\"html.jarvis\", common, \"state\");\n        val = await this.adapter.getStateAsync(\"html.jarvis\");\n        this.htmlVal[\"jarvis\"] = val?.val;\n        common = {\n            type: \"string\",\n            role: \"state\",\n            name: {\n                en: \"Weekdays mouseover color\",\n                de: \"Wochentage Mausover Farbe\",\n                ru: \"\u0426\u0432\u0435\u0442 \u043C\u044B\u0448\u043A\u0438\",\n                pt: \"Semanas mouseover cor\",\n                nl: \"Weekdagen muisover kleur\",\n                fr: \"La couleur de la souris en semaine\",\n                it: \"I giorni feriali il colore del mouseover\",\n                es: \"D\u00EDas semanales rat\u00F3nover color\",\n                pl: \"Cotygodniowy kolor mouseover\",\n                uk: \"\u0414\u0435\u043D\u044C \u043D\u0430\u0440\u043E\u0434\u0436\u0435\u043D\u043D\u044F \u041A\u043E\u043B\u0456\u0440\",\n                \"zh-cn\": \"\u5468\u65E5\u9F20\u6807\u7FFB\u8F6C\u989C\u8272\",\n            },\n            desc: \"Weekdays mouseover color\",\n            read: true,\n            write: true,\n            def: \"blue\",\n        };\n        await this.createDataPoint(\"html.background_color_weekdays_hover\", common, \"state\");\n        val = await this.adapter.getStateAsync(\"html.background_color_weekdays_hover\");\n        this.htmlVal[\"background_color_weekdays_hover\"] = val?.val;\n        common = {\n            type: \"string\",\n            role: \"state\",\n            name: {\n                en: \"HTML code\",\n                de: \"HTML-Code\",\n                ru: \"HTML \u043A\u043E\u0434\",\n                pt: \"C\u00F3digo HTML\",\n                nl: \"HTML-code\",\n                fr: \"Code HTML\",\n                it: \"Codice HTML\",\n                es: \"C\u00F3digo HTML\",\n                pl: \"Kod HTML\",\n                uk: \"\u041A\u043E\u0434 HTML\",\n                \"zh-cn\": \"HTML \u4EE3\u7801\",\n            },\n            desc: \"HTML code\",\n            read: true,\n            write: true,\n            def: \"\",\n        };\n        await this.createDataPoint(\"html.html_code\", common, \"state\");\n        val = await this.adapter.getStateAsync(\"html.html_code\");\n        this.htmlVal[\"html_code\"] = val?.val;\n    }\n\n    private async createDataPoint(ident: string, common: any, types: any, native: any = null): Promise<any> {\n        try {\n            const nativvalue = !native ? { native: {} } : { native: native };\n            const obj = await this.adapter.getObjectAsync(ident);\n            const objs: any = obj;\n            if (!objs) {\n                await this.adapter\n                    .setObjectNotExistsAsync(ident, {\n                        type: types,\n                        common: common,\n                        ...nativvalue,\n                    })\n                    .catch((error) => {\n                        this.adapter.log.warn(`createDataPoint: ${error}`);\n                    });\n                if (common.def != null) await this.adapter.setState(ident, { val: common.def, ack: true });\n            } else {\n                let ischange = false;\n                if (Object.keys(objs.common).length == Object.keys(common).length) {\n                    for (const key in common) {\n                        if (objs.common[key] == null) {\n                            ischange = true;\n                            break;\n                        } else if (JSON.stringify(objs.common[key]) != JSON.stringify(common[key])) {\n                            ischange = true;\n                            break;\n                        }\n                    }\n                } else {\n                    ischange = true;\n                }\n                if (JSON.stringify(objs.type) != JSON.stringify(types)) {\n                    ischange = true;\n                }\n                if (native) {\n                    if (Object.keys(objs.native).length == Object.keys(nativvalue.native).length) {\n                        for (const key in objs.native) {\n                            if (nativvalue.native[key] == null) {\n                                ischange = true;\n                                delete objs.native;\n                                objs[\"native\"] = native;\n                                break;\n                            } else if (JSON.stringify(objs.native[key]) != JSON.stringify(nativvalue.native[key])) {\n                                ischange = true;\n                                objs.native[key] = nativvalue.native[key];\n                                break;\n                            }\n                        }\n                    } else {\n                        ischange = true;\n                    }\n                }\n                if (ischange) {\n                    this.adapter.log.debug(`INFORMATION - Change common: ${this.adapter.namespace}.${ident}`);\n                    delete objs[\"common\"];\n                    objs[\"common\"] = common;\n                    objs[\"type\"] = types;\n                    await this.adapter.setObjectAsync(ident, objs);\n                }\n            }\n        } catch (error) {\n            this.adapter.log.warn(`createDataPoint e: ${error}`);\n        }\n    }\n}\n"],
  "mappings": "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",
  "names": []
}
