{
  "version": 3,
  "sources": ["../../src/services/IoBrokerValidationState.ts"],
  "sourcesContent": ["import { getTimes } from \"suncalc\";\nimport type { Coordinate } from \"../Coordinate\";\nimport type { ValidationState } from \"./ValidationState\";\n\n/**\n * IoBrokerValidationState\n */\nexport class IoBrokerValidationState implements ValidationState {\n    /**\n     * @param adapter iobroker\n     * @param coordinate Coodinate\n     */\n    constructor(\n        private readonly adapter: ioBroker.Adapter,\n        private readonly coordinate: Coordinate,\n    ) {\n        this.adapter = adapter;\n    }\n\n    /**\n     * @param id ID\n     * @param val State val\n     * @param check boolean\n     */\n    async validation(id: string, val: any, check: boolean): Promise<any> {\n        const removeDuplicate = (arr: number[]): number[] => {\n            return arr.filter((item, index) => arr.indexOf(item) === index);\n        };\n        if ((val.type && val.type == \"OnOffSchedule\") || check) {\n            if (!check) {\n                this.adapter.log.debug(`Validation Data ${val.name}`);\n                if (val.onAction) {\n                    if (val.onAction.type == \"OnOffStateAction\") {\n                        if (val.onAction.type.valueType == \"boolean\") {\n                            val.onAction.type.onValue = true;\n                            val.onAction.type.offValue = false;\n                            if (typeof val.onAction.type.booleanValue !== \"boolean\") {\n                                this.adapter.log.warn(`Value of ${id} is changed to false`);\n                                val.onAction.type.booleanValue = false;\n                            }\n                        } else if (val.onAction.type.valueType == \"number\") {\n                            if (typeof val.onAction.type.onValue !== \"number\") {\n                                this.adapter.log.warn(`Value of ${id} is changed to 0`);\n                                val.onAction.type.booleanValue = 0;\n                            }\n                            if (typeof val.onAction.type.offValue !== \"number\") {\n                                this.adapter.log.warn(`Value of ${id} is changed to 10`);\n                                val.onAction.type.booleanValue = 10;\n                            }\n                            if (typeof val.onAction.type.booleanValue !== \"number\") {\n                                this.adapter.log.warn(`Value of ${id} is changed to 0`);\n                                val.onAction.type.booleanValue = 0;\n                            }\n                        } else if (val.onAction.type.valueType == \"string\") {\n                            if (typeof val.onAction.type.onValue !== \"string\") {\n                                this.adapter.log.warn(`Value of ${id} is changed to empty`);\n                                val.onAction.type.booleanValue = \"\";\n                            }\n                            if (typeof val.onAction.type.offValue !== \"string\") {\n                                this.adapter.log.warn(`Value of ${id} is changed to empty`);\n                                val.onAction.type.booleanValue = \"\";\n                            }\n                            if (typeof val.onAction.type.booleanValue !== \"string\") {\n                                this.adapter.log.warn(`Value of ${id} is changed to empty`);\n                                val.onAction.type.booleanValue = \"\";\n                            }\n                            if (typeof val.onAction.type.idsOfStatesToSet === \"object\") {\n                                const ids = [];\n                                for (const state of val.onAction.type.idsOfStatesToSet) {\n                                    const value = await this.adapter.getForeignObjectAsync(state);\n                                    if (value) {\n                                        ids.push(state);\n                                    } else {\n                                        this.adapter.log.error(`Requested state ${id} returned null/undefined!`);\n                                    }\n                                }\n                                val.onAction.type.idsOfStatesToSet = ids;\n                            } else {\n                                val.onAction.type.idsOfStatesToSet = [];\n                                this.adapter.log.warn(`The states are not objects, changed ${id} to empty`);\n                            }\n                        }\n                    } else {\n                        this.adapter.log.error(`Cannot found onAction type 'OnOffStateAction' in ${id}`);\n                        return (val = {});\n                    }\n                } else {\n                    this.adapter.log.error(`Cannot found onAction in ${id}`);\n                    return (val = {});\n                }\n                if (val.offAction) {\n                    if (val.offAction.type == \"OnOffStateAction\") {\n                        if (val.offAction.type.valueType == \"boolean\") {\n                            val.offAction.type.onValue = true;\n                            val.offAction.type.offValue = false;\n                            if (typeof val.offAction.type.booleanValue !== \"boolean\") {\n                                this.adapter.log.warn(`Value of ${id} is changed to false`);\n                                val.offAction.type.booleanValue = false;\n                            }\n                        } else if (val.offAction.type.valueType == \"number\") {\n                            if (typeof val.offAction.type.onValue !== \"number\") {\n                                this.adapter.log.warn(`Value of ${id} is changed to 0`);\n                                val.offAction.type.booleanValue = 0;\n                            }\n                            if (typeof val.offAction.type.offValue !== \"number\") {\n                                this.adapter.log.warn(`Value of ${id} is changed to 10`);\n                                val.offAction.type.booleanValue = 10;\n                            }\n                            if (typeof val.offAction.type.booleanValue !== \"number\") {\n                                this.adapter.log.warn(`Value of ${id} is changed to 0`);\n                                val.offAction.type.booleanValue = 0;\n                            }\n                        } else if (val.offAction.type.valueType == \"string\") {\n                            if (typeof val.offAction.type.onValue !== \"string\") {\n                                this.adapter.log.warn(`Value of ${id} is changed to empty`);\n                                val.offAction.type.booleanValue = \"\";\n                            }\n                            if (typeof val.offAction.type.offValue !== \"string\") {\n                                this.adapter.log.warn(`Value of ${id} is changed to empty`);\n                                val.offAction.type.booleanValue = \"\";\n                            }\n                            if (typeof val.offAction.type.booleanValue !== \"string\") {\n                                this.adapter.log.warn(`Value of ${id} is changed to empty`);\n                                val.offAction.type.booleanValue = \"\";\n                            }\n                            if (typeof val.offAction.type.idsOfStatesToSet === \"object\") {\n                                const ids = [];\n                                for (const state of val.offAction.type.idsOfStatesToSet) {\n                                    const value = await this.adapter.getForeignObjectAsync(state);\n                                    if (value) {\n                                        ids.push(state);\n                                    } else {\n                                        this.adapter.log.error(`Requested state ${id} returned null/undefined!`);\n                                    }\n                                }\n                                val.offAction.type.idsOfStatesToSet = ids;\n                            } else {\n                                val.offAction.type.idsOfStatesToSet = [];\n                                this.adapter.log.warn(`The states are not objects, changed ${id} to empty`);\n                            }\n                        }\n                    } else {\n                        this.adapter.log.error(`Cannot found offAction type 'OnOffStateAction' in ${id}`);\n                        return (val = {});\n                    }\n                } else {\n                    this.adapter.log.error(`Cannot found offAction in ${id}`);\n                    return (val = {});\n                }\n            }\n            if (val.triggers && typeof val.triggers === \"object\" && val.triggers.length > 0) {\n                this.adapter.log.debug(`Validation all Triggers ${val.name}`);\n                const newTrigger = [];\n                for (const trigger of val.triggers) {\n                    if (trigger.type === \"TimeTrigger\") {\n                        if (trigger.hour == undefined || trigger.hour < 0 || trigger.hour > 23) {\n                            this.adapter.log.warn(`Hour must be in range 0-23 - in ${id}`);\n                            trigger.hour = 0;\n                        }\n                        if (trigger.minute == undefined || trigger.minute < 0 || trigger.minute > 59) {\n                            this.adapter.log.warn(`Minute must be in range 0-59 - in ${id}`);\n                            trigger.minute = 0;\n                        }\n                        if (trigger.weekdays) {\n                            trigger.weekdays = removeDuplicate(trigger.weekdays);\n                        }\n                        if (\n                            typeof trigger.weekdays !== \"object\" ||\n                            trigger.weekdays.length === 0 ||\n                            trigger.weekdays.length > 7\n                        ) {\n                            this.adapter.log.error(`Empty weekday is not allowed in ${id}`);\n                            trigger.weekdays = [0];\n                        }\n                        if (trigger.todayTrigger == undefined) {\n                            trigger.todayTrigger = {};\n                        }\n                    } else if (trigger.type === \"AstroTrigger\") {\n                        if (\n                            trigger.astroTime == null ||\n                            (trigger.astroTime !== \"sunrise\" &&\n                                trigger.astroTime !== \"sunset\" &&\n                                trigger.astroTime !== \"solarNoon\")\n                        ) {\n                            this.adapter.log.warn(`Astro time may not be null - in ${id}`);\n                            trigger.trigger.astroTime = \"sunrise\";\n                        }\n                        if (\n                            trigger.shiftInMinutes == null ||\n                            trigger.shiftInMinutes > 120 ||\n                            trigger.shiftInMinutes < -120\n                        ) {\n                            this.adapter.log.warn(`Shift in minutes must be in range -120 to 120 - in ${id}`);\n                            trigger.shiftInMinutes = 0;\n                        }\n                    } else if (trigger.type === \"OneTimeTrigger\") {\n                        if (isNaN(new Date(trigger.date).getTime())) {\n                            this.adapter.log.warn(`Wrong OneTimeDate ${trigger.date} in ${id}`);\n                            trigger.date = new Date().toISOString();\n                        }\n                        if (trigger.timedate == null || typeof trigger.timedate !== \"boolean\") {\n                            this.adapter.log.warn(`Wrong timedate ${trigger.timedate} in ${id}`);\n                            trigger.timedate = true;\n                        }\n                    } else {\n                        this.adapter.log.error(`Cannot found trigger type ${trigger.type} in ${id}`);\n                        return (val = {});\n                    }\n                    const objId = id.split(\".\");\n                    if (trigger.objectId.toString() != objId[3]) {\n                        this.adapter.log.warn(`Wrong ObjectId ${trigger.objectId} in ${id}`);\n                        trigger.objectId = parseInt(objId[3]);\n                    }\n                    if (trigger.valueCheck == null || typeof trigger.valueCheck !== \"boolean\") {\n                        trigger.valueCheck = false;\n                        this.adapter.log.warn(`Wrong valueCheck ${JSON.stringify(trigger)} in ${id}`);\n                    }\n                    if (!trigger.action) {\n                        trigger.action = {};\n                        this.adapter.log.warn(`Wrong action ${JSON.stringify(trigger)} in ${id}`);\n                    }\n                    if (trigger.action.type !== \"OnOffStateAction\") {\n                        if (trigger.action.type === \"ConditionAction\") {\n                            if (!trigger.action.condition) {\n                                this.adapter.log.warn(\n                                    `Missing action condition ${JSON.stringify(trigger.action)} in ${id}`,\n                                );\n                                return (val = {});\n                            }\n                            if (trigger.action.condition.type !== \"StringStateAndConstantCondition\") {\n                                if (trigger.action.condition.constant == \"\") {\n                                    trigger.action.condition.constant = \"true\";\n                                    this.adapter.log.warn(\n                                        `Wrong condition constant ${JSON.stringify(trigger.action)} in ${id}! Set constant to TRUE!`,\n                                    );\n                                }\n                                if (!trigger.action.condition.stateId1 || !trigger.action.condition.stateId2) {\n                                    this.adapter.log.warn(\n                                        `Missing action condition states1 or states2 ${JSON.stringify(trigger.action)} in ${id}`,\n                                    );\n                                    return (val = {});\n                                }\n                                const stateId1 = await this.adapter.getForeignObjectAsync(\n                                    trigger.action.condition.stateId1,\n                                );\n                                if (!stateId1) {\n                                    this.adapter.log.warn(\n                                        `Wrong action condition states1 ${JSON.stringify(trigger.action)} in ${id}`,\n                                    );\n                                    return (val = {});\n                                }\n                                const stateId2 = await this.adapter.getForeignObjectAsync(\n                                    trigger.action.condition.stateId2,\n                                );\n                                if (!stateId2) {\n                                    this.adapter.log.warn(\n                                        `Wrong action condition states2 ${JSON.stringify(trigger.action)} in ${id}`,\n                                    );\n                                    return (val = {});\n                                }\n                            } else if (trigger.action.condition.type !== \"StringStateAndStateCondition\") {\n                                if (!trigger.action.condition.stateId) {\n                                    this.adapter.log.warn(\n                                        `Missing action condition states ${JSON.stringify(trigger.action)} in ${id}`,\n                                    );\n                                    return (val = {});\n                                }\n                                const stateId = await this.adapter.getForeignObjectAsync(\n                                    trigger.action.condition.stateId,\n                                );\n                                if (!stateId) {\n                                    this.adapter.log.warn(\n                                        `Wrong action condition states ${JSON.stringify(trigger.action)} in ${id}`,\n                                    );\n                                    return (val = {});\n                                }\n                            } else {\n                                this.adapter.log.warn(\n                                    `Wrong action condition string ${JSON.stringify(trigger.action)} in ${id}`,\n                                );\n                                return (val = {});\n                            }\n                            if (trigger.action.condition.sign !== \"==\" && trigger.action.condition.sign !== \"!=\") {\n                                trigger.action.condition.sign = \"==\";\n                                this.adapter.log.warn(\n                                    `Wrong condition sign ${JSON.stringify(trigger.action)} in ${id}`,\n                                );\n                            }\n                            if (!trigger.action.action) {\n                                trigger.action.action = {};\n                                this.adapter.log.warn(\n                                    `Wrong action condition ${JSON.stringify(trigger.action)} in ${id}`,\n                                );\n                            }\n                            if (trigger.action.action.type !== \"OnOffStateAction\") {\n                                trigger.action.action.type = \"OnOffStateAction\";\n                                this.adapter.log.warn(\n                                    `Wrong action type ${JSON.stringify(trigger.action.action)} in ${id}`,\n                                );\n                            }\n                            if (trigger.action.action.name !== \"Off\" && trigger.action.action.name !== \"On\") {\n                                trigger.action.action.name = \"Off\";\n                                this.adapter.log.warn(\n                                    `Wrong action name ${JSON.stringify(trigger.action)} in ${id} - set Off`,\n                                );\n                            }\n                        } else {\n                            trigger.action.type = \"OnOffStateAction\";\n                            this.adapter.log.warn(`Wrong action type ${JSON.stringify(trigger.action)} in ${id}`);\n                            if (trigger.action.name !== \"Off\" && trigger.action.name !== \"On\") {\n                                trigger.action.name = \"Off\";\n                                this.adapter.log.warn(\n                                    `Wrong action name ${JSON.stringify(trigger.action)} in ${id} - set Off`,\n                                );\n                            }\n                        }\n                    }\n                    newTrigger.push(trigger);\n                }\n                val.triggers = newTrigger;\n            } else if (\n                val &&\n                (val.type === \"TimeTrigger\" || val.type === \"AstroTrigger\" || val.type === \"OneTimeTrigger\")\n            ) {\n                this.adapter.log.debug(`Validation Trigger ${val.name}`);\n                const trigger = val;\n                if (trigger.type === \"TimeTrigger\") {\n                    if (trigger.hour == undefined || trigger.hour < 0 || trigger.hour > 23) {\n                        this.adapter.log.warn(`Hour must be in range 0-23 - in ${id}`);\n                        trigger.hour = 0;\n                    }\n                    if (trigger.minute == undefined || trigger.minute < 0 || trigger.minute > 59) {\n                        this.adapter.log.warn(`Minute must be in range 0-59 - in ${id}`);\n                        trigger.minute = 0;\n                    }\n                    if (trigger.weekdays) {\n                        trigger.weekdays = removeDuplicate(trigger.weekdays);\n                    }\n                    if (\n                        typeof trigger.weekdays !== \"object\" ||\n                        trigger.weekdays.length === 0 ||\n                        trigger.weekdays.length > 7\n                    ) {\n                        this.adapter.log.error(`Empty weekday is not allowed in ${id}`);\n                        trigger.weekdays = [0];\n                    }\n                    if (trigger.todayTrigger == undefined) {\n                        trigger.todayTrigger = {};\n                    }\n                } else if (trigger.type === \"AstroTrigger\") {\n                    if (\n                        trigger.astroTime == null ||\n                        (trigger.astroTime !== \"sunrise\" &&\n                            trigger.astroTime !== \"sunset\" &&\n                            trigger.astroTime !== \"solarNoon\")\n                    ) {\n                        this.adapter.log.warn(`Astro time may not be null - in ${id}`);\n                        trigger.trigger.astroTime = \"sunrise\";\n                    }\n                    if (\n                        trigger.shiftInMinutes == null ||\n                        trigger.shiftInMinutes > 120 ||\n                        trigger.shiftInMinutes < -120\n                    ) {\n                        this.adapter.log.warn(`Shift in minutes must be in range -120 to 120 - in ${id}`);\n                        trigger.shiftInMinutes = 0;\n                    }\n                } else if (trigger.type === \"OneTimeTrigger\") {\n                    if (isNaN(new Date(trigger.date).getTime())) {\n                        this.adapter.log.warn(`Wrong OneTimeDate ${trigger.date} in ${id}`);\n                        trigger.date = new Date().toISOString();\n                    }\n                    if (trigger.timedate == null || typeof trigger.timedate !== \"boolean\") {\n                        this.adapter.log.warn(`Wrong timedate ${trigger.timedate} in ${id}`);\n                        trigger.timedate = true;\n                    }\n                } else {\n                    this.adapter.log.error(`Cannot found trigger type ${trigger.type} in ${id}`);\n                    return (val = {});\n                }\n                const objId = id.split(\".\");\n                if (trigger.objectId.toString() != objId[3]) {\n                    this.adapter.log.warn(`Wrong ObjectId ${trigger.objectId} in ${id}`);\n                    trigger.objectId = parseInt(objId[3]);\n                }\n                if (trigger.valueCheck == null || typeof trigger.valueCheck !== \"boolean\") {\n                    trigger.valueCheck = false;\n                    this.adapter.log.warn(`Wrong valueCheck ${JSON.stringify(trigger)} in ${id}`);\n                }\n                if (!trigger.action) {\n                    trigger.action = {};\n                    this.adapter.log.warn(`Wrong action ${JSON.stringify(trigger)} in ${id}`);\n                }\n                if (trigger.action.type !== \"OnOffStateAction\") {\n                    if (trigger.action.type === \"ConditionAction\") {\n                        if (!trigger.action.condition) {\n                            this.adapter.log.warn(\n                                `Missing action condition ${JSON.stringify(trigger.action)} in ${id}`,\n                            );\n                            return (val = {});\n                        }\n                        if (trigger.action.condition.type !== \"StringStateAndConstantCondition\") {\n                            if (trigger.action.condition.constant == \"\") {\n                                trigger.action.condition.constant = \"true\";\n                                this.adapter.log.warn(\n                                    `Wrong condition constant ${JSON.stringify(trigger.action)} in ${id}! Set constant to TRUE!`,\n                                );\n                            }\n                            if (!trigger.action.condition.stateId1 || !trigger.action.condition.stateId2) {\n                                this.adapter.log.warn(\n                                    `Missing action condition states1 or states2 ${JSON.stringify(trigger.action)} in ${id}`,\n                                );\n                                return (val = {});\n                            }\n                            const stateId1 = await this.adapter.getForeignObjectAsync(\n                                trigger.action.condition.stateId1,\n                            );\n                            if (!stateId1) {\n                                this.adapter.log.warn(\n                                    `Wrong action condition states1 ${JSON.stringify(trigger.action)} in ${id}`,\n                                );\n                                return (val = {});\n                            }\n                            const stateId2 = await this.adapter.getForeignObjectAsync(\n                                trigger.action.condition.stateId2,\n                            );\n                            if (!stateId2) {\n                                this.adapter.log.warn(\n                                    `Wrong action condition states2 ${JSON.stringify(trigger.action)} in ${id}`,\n                                );\n                                return (val = {});\n                            }\n                        } else if (trigger.action.condition.type !== \"StringStateAndStateCondition\") {\n                            if (!trigger.action.condition.stateId) {\n                                this.adapter.log.warn(\n                                    `Missing action condition states ${JSON.stringify(trigger.action)} in ${id}`,\n                                );\n                                return (val = {});\n                            }\n                            const stateId = await this.adapter.getForeignObjectAsync(trigger.action.condition.stateId);\n                            if (!stateId) {\n                                this.adapter.log.warn(\n                                    `Wrong action condition states ${JSON.stringify(trigger.action)} in ${id}`,\n                                );\n                                return (val = {});\n                            }\n                        } else {\n                            this.adapter.log.warn(\n                                `Wrong action condition string ${JSON.stringify(trigger.action)} in ${id}`,\n                            );\n                            return (val = {});\n                        }\n                        if (trigger.action.condition.sign !== \"==\" && trigger.action.condition.sign !== \"!=\") {\n                            trigger.action.condition.sign = \"==\";\n                            this.adapter.log.warn(`Wrong condition sign ${JSON.stringify(trigger.action)} in ${id}`);\n                        }\n                        if (!trigger.action.action) {\n                            trigger.action.action = {};\n                            this.adapter.log.warn(`Wrong action condition ${JSON.stringify(trigger.action)} in ${id}`);\n                        }\n                        if (trigger.action.action.type !== \"OnOffStateAction\") {\n                            trigger.action.action.type = \"OnOffStateAction\";\n                            this.adapter.log.warn(\n                                `Wrong action type ${JSON.stringify(trigger.action.action)} in ${id}`,\n                            );\n                        }\n                        if (trigger.action.action.name !== \"Off\" && trigger.action.action.name !== \"On\") {\n                            trigger.action.action.name = \"Off\";\n                            this.adapter.log.warn(\n                                `Wrong action name ${JSON.stringify(trigger.action)} in ${id} - set Off`,\n                            );\n                        }\n                    } else {\n                        trigger.action.type = \"OnOffStateAction\";\n                        this.adapter.log.warn(`Wrong action type ${JSON.stringify(trigger.action)} in ${id}`);\n                        if (trigger.action.name !== \"Off\" && trigger.action.name !== \"On\") {\n                            trigger.action.name = \"Off\";\n                            this.adapter.log.warn(\n                                `Wrong action name ${JSON.stringify(trigger.action)} in ${id} - set Off`,\n                            );\n                        }\n                    }\n                }\n                val = trigger;\n            } else {\n                this.adapter.log.debug(`Cannot found triggers in ${id}`);\n                val.triggers = [];\n            }\n        } else {\n            this.adapter.log.error(`Cannot found OnOffSchedule in ${id}`);\n            return (val = {});\n        }\n        return val;\n    }\n\n    /**\n     * @param utils Utils\n     */\n    async validationView(utils: string): Promise<void> {\n        this.adapter.log.info(\"Start Widget control!\");\n        this.adapter.log.debug(`Path: ${utils}`);\n        const visFolder = [];\n        const allVisViews: any = {};\n        const newViews: any = {};\n        const allVIS = await this.adapter.getObjectViewAsync(\"system\", \"instance\", {\n            startkey: \"system.adapter.vis.\",\n            endkey: \"system.adapter.vis.\\u9999\",\n        });\n        const allVIS2 = await this.adapter.getObjectViewAsync(\"system\", \"instance\", {\n            startkey: \"system.adapter.vis-2.\",\n            endkey: \"system.adapter.vis-2.\\u9999\",\n        });\n        if (allVIS2 && allVIS2.rows) {\n            for (const id of allVIS2.rows) {\n                if (id.id.indexOf(\".vis-2.\") !== -1) {\n                    visFolder.push(id.id.replace(\"system.adapter.\", \"\"));\n                }\n            }\n        }\n        if (allVIS && allVIS.rows) {\n            for (const id of allVIS.rows) {\n                if (id.id.indexOf(\".vis.\") !== -1) {\n                    visFolder.push(id.id.replace(\"system.adapter.\", \"\"));\n                }\n            }\n        }\n        this.adapter.log.debug(`Folder: ${JSON.stringify(visFolder)}`);\n        if (visFolder.length > 0) {\n            for (const vis of visFolder) {\n                allVisViews[vis] = {};\n                let folders;\n                try {\n                    folders = await this.adapter.readDirAsync(vis, \"\");\n                } catch {\n                    this.adapter.log.warn(`Cannot read dir ${vis}`);\n                    continue;\n                }\n                this.adapter.log.debug(`Folders: ${JSON.stringify(folders)}`);\n                for (const folder of folders) {\n                    if (folder.isDir) {\n                        if (await this.adapter.fileExistsAsync(vis, `${folder.file}/vis-views.json`)) {\n                            let valViews;\n                            try {\n                                valViews = await this.adapter.readFileAsync(vis, `${folder.file}/vis-views.json`);\n                            } catch {\n                                this.adapter.log.warn(`Cannot read file ${vis} - ${folder.file}/vis-views.json`);\n                                continue;\n                            }\n                            if (\n                                typeof valViews === \"object\" &&\n                                valViews.file.indexOf(\"tplSchedule-switcherDevicePlan\") !== -1\n                            ) {\n                                let templates;\n                                if (typeof valViews.file === \"string\") {\n                                    templates = JSON.parse(valViews.file);\n                                } else {\n                                    this.adapter.log.warn(`Wrong file input in ${vis} - ${folder.file}/vis-views.json`);\n                                    continue;\n                                }\n                                allVisViews[vis][folder.file] = {};\n                                for (const template in templates) {\n                                    if (\n                                        templates[template].widgets &&\n                                        JSON.stringify(templates[template].widgets).indexOf(\n                                            \"tplSchedule-switcherDevicePlan\",\n                                        ) !== -1\n                                    ) {\n                                        allVisViews[vis][folder.file][template] = [];\n                                        for (const widget in templates[template].widgets) {\n                                            if (\n                                                templates[template].widgets[widget].tpl ===\n                                                \"tplSchedule-switcherDevicePlan\"\n                                            ) {\n                                                if (\n                                                    templates[template].widgets[widget].data[\"oid-dataId\"] != \"\" &&\n                                                    !newViews[templates[template].widgets[widget].data[\"oid-dataId\"]]\n                                                ) {\n                                                    newViews[templates[template].widgets[widget].data[\"oid-dataId\"]] =\n                                                        {};\n                                                    newViews[templates[template].widgets[widget].data[\"oid-dataId\"]][\n                                                        vis\n                                                    ] = {};\n                                                    newViews[templates[template].widgets[widget].data[\"oid-dataId\"]][\n                                                        vis\n                                                    ][folder.file] = {};\n                                                    const countCondition: number = Number.parseInt(\n                                                        templates[template].widgets[widget].data.conditionStatesCount,\n                                                        10,\n                                                    );\n                                                    const idsCondition: any = [];\n                                                    for (let i = 1; i <= countCondition; i++) {\n                                                        const id: string =\n                                                            templates[template].widgets[widget].data[\n                                                                `oid-conditionStateId${i}`\n                                                            ];\n                                                        if (id !== undefined && id !== \"\") {\n                                                            const json: any = {};\n                                                            json[`oid-conditionStateId${i}`] =\n                                                                templates[template].widgets[widget].data[\n                                                                    `oid-conditionStateId${i}`\n                                                                ];\n                                                            idsCondition.push(json);\n                                                        }\n                                                    }\n                                                    const countState: number = Number.parseInt(\n                                                        templates[template].widgets[widget].data.conditionStatesCount,\n                                                        10,\n                                                    );\n                                                    const idsState: any = [];\n                                                    for (let i = 1; i <= countState; i++) {\n                                                        const id: string =\n                                                            templates[template].widgets[widget].data[`oid-stateId${i}`];\n                                                        if (id !== undefined && id !== \"\") {\n                                                            const json: any = {};\n                                                            json[`oid-stateId${i}`] =\n                                                                templates[template].widgets[widget].data[\n                                                                    `oid-stateId${i}`\n                                                                ];\n                                                            idsState.push(json);\n                                                        }\n                                                    }\n                                                    const oid_enabled: string = templates[template].widgets[widget]\n                                                        .data[\"oid-enabled\"]\n                                                        ? templates[template].widgets[widget].data[\"oid-enabled\"]\n                                                        : \"not select\";\n                                                    newViews[templates[template].widgets[widget].data[\"oid-dataId\"]][\n                                                        vis\n                                                    ][folder.file][widget] = {\n                                                        prefix: folder,\n                                                        namespace: vis,\n                                                        view: template,\n                                                        widgetId: widget,\n                                                        newId: templates[template].widgets[widget].data[\"oid-dataId\"],\n                                                        enabled: oid_enabled,\n                                                        stateCount: countState,\n                                                        state: idsState,\n                                                        conditionCount: countCondition,\n                                                        condition: idsCondition,\n                                                        valueType: templates[template].widgets[widget].data.valueType,\n                                                        offValue: templates[template].widgets[widget].data.offValue,\n                                                        onValue: templates[template].widgets[widget].data.onValue,\n                                                        newOff: templates[template].widgets[widget].data.newOff,\n                                                        newOn: templates[template].widgets[widget].data.newOn,\n                                                    };\n                                                } else if (\n                                                    templates[template].widgets[widget].data[\"oid-dataId\"] != \"\"\n                                                ) {\n                                                    if (\n                                                        !newViews[\n                                                            templates[template].widgets[widget].data[\"oid-dataId\"]\n                                                        ][vis]\n                                                    ) {\n                                                        newViews[\n                                                            templates[template].widgets[widget].data[\"oid-dataId\"]\n                                                        ][vis] = {};\n                                                    }\n                                                    if (\n                                                        !newViews[\n                                                            templates[template].widgets[widget].data[\"oid-dataId\"]\n                                                        ][vis][folder.file]\n                                                    ) {\n                                                        newViews[\n                                                            templates[template].widgets[widget].data[\"oid-dataId\"]\n                                                        ][vis][folder.file] = {};\n                                                    }\n                                                    const countCondition: number = Number.parseInt(\n                                                        templates[template].widgets[widget].data.conditionStatesCount,\n                                                        10,\n                                                    );\n                                                    const idsCondition: any = [];\n                                                    for (let i = 1; i <= countCondition; i++) {\n                                                        const id: string =\n                                                            templates[template].widgets[widget].data[\n                                                                `oid-conditionStateId${i}`\n                                                            ];\n                                                        if (id !== undefined && id !== \"\") {\n                                                            const json: any = {};\n                                                            json[`oid-conditionStateId${i}`] =\n                                                                templates[template].widgets[widget].data[\n                                                                    `oid-conditionStateId${i}`\n                                                                ];\n                                                            idsCondition.push(json);\n                                                        }\n                                                    }\n                                                    const countState: number = Number.parseInt(\n                                                        templates[template].widgets[widget].data.conditionStatesCount,\n                                                        10,\n                                                    );\n                                                    const idsState: any = [];\n                                                    for (let i = 1; i <= countState; i++) {\n                                                        const id: string =\n                                                            templates[template].widgets[widget].data[`oid-stateId${i}`];\n                                                        if (id !== undefined && id !== \"\") {\n                                                            const json: any = {};\n                                                            json[`oid-stateId${i}`] =\n                                                                templates[template].widgets[widget].data[\n                                                                    `oid-stateId${i}`\n                                                                ];\n                                                            idsState.push(json);\n                                                        }\n                                                    }\n                                                    const oid_enabled: string = templates[template].widgets[widget]\n                                                        .data[\"oid-enabled\"]\n                                                        ? templates[template].widgets[widget].data[\"oid-enabled\"]\n                                                        : \"not select\";\n                                                    newViews[templates[template].widgets[widget].data[\"oid-dataId\"]][\n                                                        vis\n                                                    ][folder.file][widget] = {\n                                                        prefix: folder,\n                                                        namespace: vis,\n                                                        view: template,\n                                                        widgetId: widget,\n                                                        newId: templates[template].widgets[widget].data[\"oid-dataId\"],\n                                                        enabled: oid_enabled,\n                                                        stateCount: countState,\n                                                        state: idsState,\n                                                        conditionCount: countCondition,\n                                                        condition: idsCondition,\n                                                        valueType: templates[template].widgets[widget].data.valueType,\n                                                        offValue: templates[template].widgets[widget].data.offValue,\n                                                        onValue: templates[template].widgets[widget].data.onValue,\n                                                        newOff: templates[template].widgets[widget].data.newOff,\n                                                        newOn: templates[template].widgets[widget].data.newOn,\n                                                    };\n                                                }\n                                                if (\n                                                    !templates[template].widgets[widget].data[\"oid-dataId\"] ||\n                                                    templates[template].widgets[widget].data[\"oid-dataId\"] == \"\"\n                                                ) {\n                                                    this.adapter.log.warn(\n                                                        `Missing dataId for ${widget} - ${template} - ${JSON.stringify(folder)} - ${vis}`,\n                                                    );\n                                                }\n                                                if (\n                                                    !templates[template].widgets[widget].data[\"oid-stateId1\"] ||\n                                                    templates[template].widgets[widget].data[\"oid-stateId1\"] == \"\"\n                                                ) {\n                                                    this.adapter.log.warn(\n                                                        `Missing stateId for ${widget} - ${template} - ${JSON.stringify(folder)} - ${vis}`,\n                                                    );\n                                                }\n                                                if (\n                                                    !templates[template].widgets[widget].data[\"oid-enabled\"] ||\n                                                    templates[template].widgets[widget].data[\"oid-enabled\"] == \"\"\n                                                ) {\n                                                    this.adapter.log.warn(\n                                                        `Missing oid-enabledId for ${widget} - ${template} - ${JSON.stringify(folder)} - ${vis}`,\n                                                    );\n                                                }\n                                                if (\n                                                    templates[template].widgets[widget].data[\"oid-dataId\"] &&\n                                                    templates[template].widgets[widget].data[\"oid-enabled\"] &&\n                                                    templates[template].widgets[widget].data[\"oid-dataId\"] != \"\" &&\n                                                    templates[template].widgets[widget].data[\"oid-enabled\"] != \"\"\n                                                ) {\n                                                    const splitDataId =\n                                                        templates[template].widgets[widget].data[\"oid-dataId\"].split(\n                                                            \".\",\n                                                        );\n                                                    const splitEnabledId =\n                                                        templates[template].widgets[widget].data[\"oid-enabled\"].split(\n                                                            \".\",\n                                                        );\n                                                    if (splitDataId.length != 5 || splitDataId[4] != \"data\") {\n                                                        this.adapter.log.warn(\n                                                            `Wrong dataId ${templates[template].widgets[widget].data[\"oid-dataId\"]} for ${widget} - ${template} - ${JSON.stringify(folder)} - ${vis}`,\n                                                        );\n                                                    }\n                                                    if (splitEnabledId.length != 5 || splitEnabledId[4] != \"enabled\") {\n                                                        this.adapter.log.warn(\n                                                            `Wrong dataId ${templates[template].widgets[widget].data[\"oid-enabled\"]} for ${widget} - ${template} - ${JSON.stringify(folder)} - ${vis}`,\n                                                        );\n                                                    }\n                                                    if (splitEnabledId[3] != splitDataId[3]) {\n                                                        this.adapter.log.warn(\n                                                            `Wrong dataId and enabledID ${templates[template].widgets[widget].data[\"oid-dataId\"]} - ${templates[template].widgets[widget].data[\"oid-enabled\"]} for ${widget} - ${template} - ${JSON.stringify(folder)} - ${vis}`,\n                                                        );\n                                                    }\n                                                }\n                                                const wid: any = {};\n                                                wid[widget] = templates[template].widgets[widget];\n                                                allVisViews[vis][folder.file][template].push(wid);\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        this.adapter.log.debug(`newViews: ${JSON.stringify(newViews)}`);\n        if (Object.keys(newViews).length > 0) {\n            for (const stateId in newViews) {\n                const id = stateId.replace(\"data\", \"views\");\n                const obj = await this.adapter.getObjectAsync(id);\n                if (obj) {\n                    await this.adapter.setState(id, {\n                        val: JSON.stringify(newViews[stateId]),\n                        ack: true,\n                    });\n                } else {\n                    if (id === \"undefined\") {\n                        this.adapter.log.error(\n                            `Missing dataId - Please delete Widgets: ${JSON.stringify(newViews[stateId])}`,\n                        );\n                    } else {\n                        this.adapter.log.error(\n                            `Missing object ${id} - Please delete Widgets: ${JSON.stringify(newViews[stateId])}`,\n                        );\n                    }\n                }\n            }\n        }\n        const currentStates: any = await this.adapter.getStatesAsync(\n            `schedule-switcher.${this.adapter.instance}.onoff.*`,\n        );\n        for (const stateId in currentStates) {\n            if (stateId.toString().indexOf(\".data\") !== -1) {\n                if (!newViews[stateId] && typeof currentStates[stateId].val === \"string\") {\n                    const id = stateId.replace(\"data\", \"enabled\");\n                    const eneabled = await this.adapter.getStateAsync(id);\n                    const val = JSON.parse(currentStates[stateId].val);\n                    if (\n                        val.onAction &&\n                        val.onAction.idsOfStatesToSet &&\n                        val.onAction.idsOfStatesToSet[0] === \"default.state\"\n                    ) {\n                        this.adapter.log.debug(\"Default state in onAction!\");\n                    }\n                    if (\n                        val.offAction &&\n                        val.offAction.idsOfStatesToSet &&\n                        val.offAction.idsOfStatesToSet[0] === \"default.state\"\n                    ) {\n                        this.adapter.log.debug(\"Default state in offAction!\");\n                    }\n                    const view = stateId.replace(\"data\", \"views\");\n                    if (\n                        (val.onAction.idsOfStatesToSet.length > 0 || val.offAction.idsOfStatesToSet.length > 0) &&\n                        val.triggers.length > 0\n                    ) {\n                        if (eneabled && eneabled.val && !val.active) {\n                            await this.adapter.setState(id, { val: false, ack: true });\n                            await this.adapter.setState(view, {\n                                val: JSON.stringify({\n                                    error: `Trigger ${stateId} is active but there is no widget. Set Enabled to false!!!`,\n                                }),\n                                ack: true,\n                            });\n                            this.adapter.log.debug(\n                                `Trigger ${stateId} is active but there is no widget. Set Enabled to false!!!`,\n                            );\n                        } else {\n                            await this.adapter.setState(view, {\n                                val: JSON.stringify({\n                                    error: `Trigger ${stateId} is active but there is no widget.`,\n                                }),\n                                ack: true,\n                            });\n                        }\n                    } else {\n                        await this.adapter.setState(view, {\n                            val: JSON.stringify({\n                                error: `The trigger ${stateId} is not used.`,\n                            }),\n                            ack: true,\n                        });\n                    }\n                }\n            }\n        }\n    }\n\n    /**\n     * Set next times\n     *\n     * @param check true/false\n     */\n    public async setNextTime(check: boolean): Promise<void> {\n        const states = await this.adapter.getStatesAsync(`schedule-switcher.${this.adapter.instance}.onoff.*`);\n        for (const id in states) {\n            if (id.toString().indexOf(\".data\") !== -1) {\n                const state = states[id];\n                if (state) {\n                    if (typeof state.val === \"string\" && state.val.startsWith(\"{\")) {\n                        const triggers = JSON.parse(state.val);\n                        if (triggers && triggers.triggers && triggers.triggers.length > 0) {\n                            let isChange = false;\n                            for (const trigger of triggers.triggers) {\n                                if (trigger && trigger.type === \"AstroTrigger\") {\n                                    trigger.todayTrigger = await this.nextDate(new Date(), trigger);\n                                    trigger.todayTrigger.date = await this.nextDateSwitch(new Date(), trigger);\n                                    const actual = new Date(trigger.todayTrigger.date);\n                                    trigger.todayTrigger.hour = actual.getHours();\n                                    trigger.todayTrigger.minute = actual.getMinutes();\n                                    trigger.todayTrigger.weekday = actual.getDay();\n                                    isChange = true;\n                                    if (check) {\n                                        this.adapter.sendTo(this.adapter.namespace, \"update-trigger\", {\n                                            dataId: id,\n                                            trigger: trigger,\n                                        });\n                                    }\n                                }\n                            }\n                            if (isChange) {\n                                await this.adapter.setState(id, { val: JSON.stringify(triggers), ack: true });\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n\n    /**\n     * Set action time\n     */\n    public async setActionTime(): Promise<void> {\n        const states = await this.adapter.getStatesAsync(`schedule-switcher.${this.adapter.instance}.onoff.*`);\n        const allData: any = [];\n        for (const id in states) {\n            if (id.toString().indexOf(\".data\") !== -1) {\n                const state = states[id];\n                if (state) {\n                    if (typeof state.val === \"string\" && state.val.startsWith(\"{\")) {\n                        const triggers = JSON.parse(state.val);\n                        if (triggers && triggers.triggers && triggers.triggers.length > 0) {\n                            const enabled = await this.adapter.getStateAsync(id.replace(\".data\", \".enabled\"));\n                            for (const trigger of triggers.triggers) {\n                                const switching = {\n                                    type: trigger.type,\n                                    name: triggers.name,\n                                    triggerid: parseInt(trigger.id),\n                                    action: trigger.action.type,\n                                    states: triggers.onAction.idsOfStatesToSet,\n                                    active: enabled && enabled.val ? true : false,\n                                    hour: 0,\n                                    minute: 0,\n                                    day: 0,\n                                    dateISO: \"\",\n                                    timestamp: 0,\n                                    objectId: trigger.objectId,\n                                };\n                                const now: Date = new Date();\n                                if (trigger && trigger.type === \"TimeTrigger\") {\n                                    let addDate = 0;\n                                    if (trigger.hour === 0 && trigger.minute === 0) {\n                                        addDate = 1;\n                                    }\n                                    const switchTime: Date = new Date(\n                                        `${now.getFullYear()}-${now.getMonth() + 1}-${now.getDate() + addDate} ${trigger.hour}:${trigger.minute}`,\n                                    );\n                                    if (switchTime >= now && trigger.weekdays.includes(now.getDay())) {\n                                        switching.hour = trigger.hour;\n                                        switching.minute = trigger.minute;\n                                        switching.day = switchTime.getDate();\n                                        switching.dateISO = new Date(switchTime).toISOString();\n                                        switching.timestamp = switchTime.getTime();\n                                    } else {\n                                        const t: string = await this.nextDateSwitch(new Date(), trigger);\n                                        switching.hour = trigger.hour;\n                                        switching.minute = trigger.minute;\n                                        switching.day = new Date(t).getDate();\n                                        switching.dateISO = t;\n                                        switching.timestamp = new Date(t).getTime();\n                                    }\n                                } else if (trigger && trigger.type === \"AstroTrigger\") {\n                                    if (trigger.weekdays.includes(now.getDay())) {\n                                        trigger.todayTrigger = await this.nextDate(new Date(), trigger);\n                                        switching.hour = trigger.todayTrigger.hour;\n                                        switching.minute = trigger.todayTrigger.minute;\n                                        switching.day = now.getDate();\n                                        switching.dateISO = trigger.date;\n                                        switching.timestamp = new Date(trigger.date).getTime();\n                                    } else {\n                                        const t: string = await this.nextDateSwitch(new Date(), trigger);\n                                        trigger.todayTrigger = await this.nextDate(new Date(t), trigger);\n                                        switching.hour = trigger.todayTrigger.hour;\n                                        switching.minute = trigger.todayTrigger.minute;\n                                        switching.day = new Date(trigger.todayTrigger.date).getDate();\n                                        switching.dateISO = t;\n                                        switching.timestamp = new Date(trigger.todayTrigger.date).getTime();\n                                    }\n                                } else if (trigger && trigger.type === \"OneTimeTrigger\") {\n                                    if (new Date(trigger.date) >= now) {\n                                        const d: Date = new Date(trigger.date);\n                                        switching.hour = d.getHours();\n                                        switching.minute = d.getMinutes();\n                                        switching.day = new Date(trigger.date).getDate();\n                                        switching.dateISO = trigger.date;\n                                        switching.timestamp = new Date(trigger.date).getTime();\n                                    }\n                                }\n                                if (switching.timestamp > 0) {\n                                    allData.push(switching);\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        if (allData.length > 0) {\n            const data: any = allData.sort((a: any, b: any) => a.timestamp - b.timestamp);\n            await this.adapter.setState(\"nextEvents\", { val: JSON.stringify(data), ack: true });\n        }\n    }\n\n    private async nextDateSwitch(now: Date, trigger: any): Promise<string> {\n        let diffDays = 0;\n        const nextDay: number =\n            trigger.weekdays.length === 1\n                ? trigger.weekdays[0]\n                : await this.nextActiveDay(trigger.weekdays, now.getDay());\n        if (nextDay > now.getDay()) {\n            diffDays = nextDay - now.getDay();\n        } else {\n            diffDays = nextDay + 7 - now.getDay();\n        }\n        const next: Date = new Date(now.setDate(now.getDate() + diffDays));\n        const hour = trigger.hour != null ? trigger.hour : trigger.todayTrigger.hour;\n        const minute = trigger.minute != null ? trigger.minute : trigger.todayTrigger.minute;\n        return new Date(\n            `${next.getFullYear()}-${next.getMonth() + 1}-${next.getDate()} ${hour}:${minute}`,\n        ).toISOString();\n    }\n\n    private nextDate(date: Date, data: any): Promise<any> {\n        const next = getTimes(date, this.coordinate.getLatitude(), this.coordinate.getLongitude());\n        let astro: Date;\n        if (data.astroTime === \"sunset\") {\n            astro = next.sunset;\n        } else if (data.astroTime === \"sunrise\") {\n            astro = next.sunrise;\n        } else {\n            astro = next.solarNoon;\n        }\n        new Date(astro.getTime()).setMinutes(new Date(astro.getTime()).getMinutes() + data.shiftInMinutes);\n        return Promise.resolve({\n            hour: astro.getHours(),\n            minute: astro.getMinutes(),\n            weekday: astro.getDay(),\n            date: astro,\n        });\n    }\n\n    private nextActiveDay(array: number[], day: number): Promise<number> {\n        array = array.map(val => {\n            return val === 0 ? 7 : val;\n        });\n        const numChecker: any = (num: any) => array.find(v => v > num);\n        const next: number | undefined = numChecker(day);\n        return Promise.resolve(next == undefined ? 0 : next);\n    }\n}\n"],
  "mappings": "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",
  "names": []
}
