{
  "version": 3,
  "sources": ["../../src/services/IoBrokerValidationState.ts"],
  "sourcesContent": ["import * as fs from \"fs\";\nimport { validationState } from \"./ValidationState\";\n\nexport class IoBrokerValidationState implements validationState {\n    private adapter: ioBroker.Adapter;\n    private delayTimeout: any;\n    constructor(adapter: ioBroker.Adapter) {\n        this.adapter = adapter;\n    }\n\n    async validation(id: string, val: any, check: boolean): Promise<any> {\n        if ((val.type && val.type == \"OnOffSchedule\") || check) {\n            if (!check) {\n                if (val.onAction) {\n                    if (val.onAction.type == \"OnOffStateAction\") {\n                        if (val.onAction.type.valueType == \"boolean\") {\n                            val.onAction.type.onValue = true;\n                            val.onAction.type.offValue = false;\n                            if (typeof val.onAction.type.booleanValue !== \"boolean\") {\n                                this.adapter.log.warn(`Value of ${id} is changed to false`);\n                                val.onAction.type.booleanValue = false;\n                            }\n                        } else if (val.onAction.type.valueType == \"number\") {\n                            if (typeof val.onAction.type.onValue !== \"number\") {\n                                this.adapter.log.warn(`Value of ${id} is changed to 0`);\n                                val.onAction.type.booleanValue = 0;\n                            }\n                            if (typeof val.onAction.type.offValue !== \"number\") {\n                                this.adapter.log.warn(`Value of ${id} is changed to 10`);\n                                val.onAction.type.booleanValue = 10;\n                            }\n                            if (typeof val.onAction.type.booleanValue !== \"number\") {\n                                this.adapter.log.warn(`Value of ${id} is changed to 0`);\n                                val.onAction.type.booleanValue = 0;\n                            }\n                        } else if (val.onAction.type.valueType == \"string\") {\n                            if (typeof val.onAction.type.onValue !== \"string\") {\n                                this.adapter.log.warn(`Value of ${id} is changed to empty`);\n                                val.onAction.type.booleanValue = \"\";\n                            }\n                            if (typeof val.onAction.type.offValue !== \"string\") {\n                                this.adapter.log.warn(`Value of ${id} is changed to empty`);\n                                val.onAction.type.booleanValue = \"\";\n                            }\n                            if (typeof val.onAction.type.booleanValue !== \"string\") {\n                                this.adapter.log.warn(`Value of ${id} is changed to empty`);\n                                val.onAction.type.booleanValue = \"\";\n                            }\n                            if (typeof val.onAction.type.idsOfStatesToSet === \"object\") {\n                                const ids = [];\n                                for (const state of val.onAction.type.idsOfStatesToSet) {\n                                    const value = await this.adapter.getForeignObjectAsync(state);\n                                    if (value) {\n                                        ids.push(state);\n                                    } else {\n                                        this.adapter.log.error(`Requested state ${id} returned null/undefined!`);\n                                    }\n                                }\n                                val.onAction.type.idsOfStatesToSet = ids;\n                            } else {\n                                val.onAction.type.idsOfStatesToSet = [];\n                                this.adapter.log.warn(`The states are not objects, changed ${id} to empty`);\n                            }\n                        }\n                    } else {\n                        this.adapter.log.error(`Cannot found onAction type 'OnOffStateAction' in ${id}`);\n                        val = {};\n                        return;\n                    }\n                } else {\n                    this.adapter.log.error(`Cannot found onAction in ${id}`);\n                    val = {};\n                    return;\n                }\n                if (val.offAction) {\n                    if (val.offAction.type == \"OnOffStateAction\") {\n                        if (val.offAction.type.valueType == \"boolean\") {\n                            val.offAction.type.onValue = true;\n                            val.offAction.type.offValue = false;\n                            if (typeof val.offAction.type.booleanValue !== \"boolean\") {\n                                this.adapter.log.warn(`Value of ${id} is changed to false`);\n                                val.offAction.type.booleanValue = false;\n                            }\n                        } else if (val.offAction.type.valueType == \"number\") {\n                            if (typeof val.offAction.type.onValue !== \"number\") {\n                                this.adapter.log.warn(`Value of ${id} is changed to 0`);\n                                val.offAction.type.booleanValue = 0;\n                            }\n                            if (typeof val.offAction.type.offValue !== \"number\") {\n                                this.adapter.log.warn(`Value of ${id} is changed to 10`);\n                                val.offAction.type.booleanValue = 10;\n                            }\n                            if (typeof val.offAction.type.booleanValue !== \"number\") {\n                                this.adapter.log.warn(`Value of ${id} is changed to 0`);\n                                val.offAction.type.booleanValue = 0;\n                            }\n                        } else if (val.offAction.type.valueType == \"string\") {\n                            if (typeof val.offAction.type.onValue !== \"string\") {\n                                this.adapter.log.warn(`Value of ${id} is changed to empty`);\n                                val.offAction.type.booleanValue = \"\";\n                            }\n                            if (typeof val.offAction.type.offValue !== \"string\") {\n                                this.adapter.log.warn(`Value of ${id} is changed to empty`);\n                                val.offAction.type.booleanValue = \"\";\n                            }\n                            if (typeof val.offAction.type.booleanValue !== \"string\") {\n                                this.adapter.log.warn(`Value of ${id} is changed to empty`);\n                                val.offAction.type.booleanValue = \"\";\n                            }\n                            if (typeof val.offAction.type.idsOfStatesToSet === \"object\") {\n                                const ids = [];\n                                for (const state of val.offAction.type.idsOfStatesToSet) {\n                                    const value = await this.adapter.getForeignObjectAsync(state);\n                                    if (value) {\n                                        ids.push(state);\n                                    } else {\n                                        this.adapter.log.error(`Requested state ${id} returned null/undefined!`);\n                                    }\n                                }\n                                val.offAction.type.idsOfStatesToSet = ids;\n                            } else {\n                                val.offAction.type.idsOfStatesToSet = [];\n                                this.adapter.log.warn(`The states are not objects, changed ${id} to empty`);\n                            }\n                        }\n                    } else {\n                        this.adapter.log.error(`Cannot found offAction type 'OnOffStateAction' in ${id}`);\n                        val = {};\n                        return;\n                    }\n                } else {\n                    this.adapter.log.error(`Cannot found offAction in ${id}`);\n                    val = {};\n                    return;\n                }\n            }\n            if (val.triggers && typeof val.triggers === \"object\" && val.triggers.length > 0) {\n                const newTrigger = [];\n                for (const trigger of val.triggers) {\n                    if (trigger.type === \"TimeTrigger\") {\n                        if (trigger.hour == undefined || trigger.hour < 0 || trigger.hour > 23) {\n                            this.adapter.log.warn(`Hour must be in range 0-23 - in ${id}`);\n                            trigger.hour = 0;\n                        }\n                        if (trigger.minute == undefined || trigger.minute < 0 || trigger.minute > 59) {\n                            this.adapter.log.warn(`Minute must be in range 0-59 - in ${id}`);\n                            trigger.minute = 0;\n                        }\n                        if (\n                            typeof trigger.weekdays !== \"object\" ||\n                            trigger.weekdays.length === 0 ||\n                            trigger.weekdays.length > 7\n                        ) {\n                            this.adapter.log.error(`Empty weekday is not allowed in ${id}`);\n                            trigger.weekdays = [0];\n                        }\n                    } else if (trigger.type === \"AstroTrigger\") {\n                        if (\n                            trigger.astroTime == null ||\n                            (trigger.astroTime !== \"sunrise\" &&\n                                trigger.astroTime !== \"sunset\" &&\n                                trigger.astroTime !== \"solarNoon\")\n                        ) {\n                            this.adapter.log.warn(`Astro time may not be null - in ${id}`);\n                            trigger.trigger.astroTime = \"sunrise\";\n                        }\n                        if (\n                            trigger.shiftInMinutes == null ||\n                            trigger.shiftInMinutes > 120 ||\n                            trigger.shiftInMinutes < -120\n                        ) {\n                            this.adapter.log.warn(`Shift in minutes must be in range -120 to 120 - in ${id}`);\n                            trigger.shiftInMinutes = 0;\n                        }\n                    } else if (trigger.type === \"OneTimeTrigger\") {\n                        if (isNaN(new Date(trigger.date).getTime())) {\n                            this.adapter.log.warn(`Wrong OneTimeDate ${trigger.date} in ${id}`);\n                            trigger.date = new Date().toISOString();\n                        }\n                        if (trigger.timedate == null || typeof trigger.timedate !== \"boolean\") {\n                            this.adapter.log.warn(`Wrong timedate ${trigger.timedate} in ${id}`);\n                            trigger.timedate = true;\n                        }\n                    } else {\n                        this.adapter.log.error(`Cannot found trigger type ${trigger.type} in ${id}`);\n                        val = {};\n                        return;\n                    }\n                    const objId = id.split(\".\");\n                    if (trigger.objectId.toString() != objId[3]) {\n                        this.adapter.log.warn(`Wrong ObjectId ${trigger.objectId} in ${id}`);\n                        trigger.objectId = parseInt(objId[3]);\n                    }\n                    if (!trigger.action) {\n                        trigger.action = {};\n                        this.adapter.log.warn(`Wrong action ${JSON.stringify(trigger)} in ${id}`);\n                    }\n                    if (trigger.action.type !== \"OnOffStateAction\") {\n                        if (trigger.action.type === \"ConditionAction\") {\n                            if (!trigger.action.condition) {\n                                val = {};\n                                this.adapter.log.warn(\n                                    `Missing action condition ${JSON.stringify(trigger.action)} in ${id}`,\n                                );\n                                return;\n                            }\n                            if (trigger.action.condition.type !== \"StringStateAndConstantCondition\") {\n                                if (trigger.action.condition.constant !== \"true\") {\n                                    trigger.action.condition.constant = \"true\";\n                                    this.adapter.log.warn(\n                                        `Wrong condition constant ${JSON.stringify(trigger.action)} in ${id}`,\n                                    );\n                                }\n                                if (!trigger.action.condition.stateId1 || !trigger.action.condition.stateId2) {\n                                    val = {};\n                                    this.adapter.log.warn(\n                                        `Missing action condition states1 or states2 ${JSON.stringify(trigger.action)} in ${id}`,\n                                    );\n                                    return;\n                                }\n                                const stateId1 = await this.adapter.getForeignObjectAsync(\n                                    trigger.action.condition.stateId1,\n                                );\n                                if (!stateId1) {\n                                    val = {};\n                                    this.adapter.log.warn(\n                                        `Wrong action condition states1 ${JSON.stringify(trigger.action)} in ${id}`,\n                                    );\n                                    return;\n                                }\n                                const stateId2 = await this.adapter.getForeignObjectAsync(\n                                    trigger.action.condition.stateId2,\n                                );\n                                if (!stateId2) {\n                                    val = {};\n                                    this.adapter.log.warn(\n                                        `Wrong action condition states2 ${JSON.stringify(trigger.action)} in ${id}`,\n                                    );\n                                    return;\n                                }\n                            } else if (trigger.action.condition.type !== \"StringStateAndStateCondition\") {\n                                if (!trigger.action.condition.stateId) {\n                                    val = {};\n                                    this.adapter.log.warn(\n                                        `Missing action condition states ${JSON.stringify(trigger.action)} in ${id}`,\n                                    );\n                                    return;\n                                }\n                                const stateId = await this.adapter.getForeignObjectAsync(\n                                    trigger.action.condition.stateId,\n                                );\n                                if (!stateId) {\n                                    val = {};\n                                    this.adapter.log.warn(\n                                        `Wrong action condition states ${JSON.stringify(trigger.action)} in ${id}`,\n                                    );\n                                    return;\n                                }\n                            } else {\n                                val = {};\n                                this.adapter.log.warn(\n                                    `Wrong action condition string ${JSON.stringify(trigger.action)} in ${id}`,\n                                );\n                                return;\n                            }\n                            if (trigger.action.condition.sign !== \"==\" && trigger.action.condition.sign !== \"!=\") {\n                                trigger.action.condition.sign = \"==\";\n                                this.adapter.log.warn(\n                                    `Wrong condition sign ${JSON.stringify(trigger.action)} in ${id}`,\n                                );\n                            }\n                            if (!trigger.action.action) {\n                                trigger.action.action = {};\n                                this.adapter.log.warn(\n                                    `Wrong action condition ${JSON.stringify(trigger.action)} in ${id}`,\n                                );\n                            }\n                            if (trigger.action.action.type !== \"OnOffStateAction\") {\n                                trigger.action.action.type = \"OnOffStateAction\";\n                                this.adapter.log.warn(\n                                    `Wrong action type ${JSON.stringify(trigger.action.action)} in ${id}`,\n                                );\n                            }\n                            if (trigger.action.action.name !== \"Off\" && trigger.action.action.name !== \"On\") {\n                                trigger.action.action.name = \"Off\";\n                                this.adapter.log.warn(\n                                    `Wrong action name ${JSON.stringify(trigger.action)} in ${id} - set Off`,\n                                );\n                            }\n                        } else {\n                            trigger.action.type = \"OnOffStateAction\";\n                            this.adapter.log.warn(`Wrong action type ${JSON.stringify(trigger.action)} in ${id}`);\n                            if (trigger.action.name !== \"Off\" && trigger.action.name !== \"On\") {\n                                trigger.action.name = \"Off\";\n                                this.adapter.log.warn(\n                                    `Wrong action name ${JSON.stringify(trigger.action)} in ${id} - set Off`,\n                                );\n                            }\n                        }\n                    }\n                    newTrigger.push(trigger);\n                }\n                val.triggers = newTrigger;\n            } else {\n                this.adapter.log.debug(`Cannot found triggers in ${id}`);\n                val.triggers = [];\n            }\n        } else {\n            this.adapter.log.error(`Cannot found OnOffSchedule in ${id}`);\n            val = {};\n            return;\n        }\n    }\n\n    async validationView(utils: string): Promise<void> {\n        this.adapter.log.info(\"Start Widget control!\");\n        const visFolder = [];\n        const allVisViews: any = {};\n        const newViews: any = {};\n        const allVIS = await this.adapter.getObjectViewAsync(\"system\", \"instance\", {\n            startkey: \"system.adapter.vis.\",\n            endkey: \"system.adapter.vis.\\u9999\",\n        });\n        const allVIS2 = await this.adapter.getObjectViewAsync(\"system\", \"instance\", {\n            startkey: \"system.adapter.vis-2.\",\n            endkey: \"system.adapter.vis-2.\\u9999\",\n        });\n        if (allVIS2 && allVIS2.rows) {\n            for (const id of allVIS2.rows) {\n                visFolder.push(id.id.replace(\"system.adapter.\", \"\"));\n            }\n        }\n        if (allVIS && allVIS.rows) {\n            for (const id of allVIS.rows) {\n                visFolder.push(id.id.replace(\"system.adapter.\", \"\"));\n            }\n        }\n        if (visFolder.length > 0) {\n            const path = `${utils}files/`;\n            for (const vis of visFolder) {\n                allVisViews[vis] = {};\n                const folders = fs.readdirSync(`${path}${vis}/`);\n                for (const folder of folders) {\n                    if (fs.statSync(`${path}${vis}/${folder}`).isDirectory()) {\n                        if (fs.existsSync(`${path}${vis}/${folder}/vis-views.json`)) {\n                            const valViews = fs.readFileSync(`${path}${vis}/${folder}/vis-views.json`, \"utf-8\");\n                            if (valViews.indexOf(\"tplSchedule-switcherDevicePlan\") !== -1) {\n                                const templates = JSON.parse(valViews);\n                                allVisViews[vis][folder] = {};\n                                for (const template in templates) {\n                                    if (\n                                        templates[template].widgets &&\n                                        JSON.stringify(templates[template].widgets).indexOf(\n                                            \"tplSchedule-switcherDevicePlan\",\n                                        ) !== -1\n                                    ) {\n                                        allVisViews[vis][folder][template] = [];\n                                        for (const widget in templates[template].widgets) {\n                                            if (\n                                                templates[template].widgets[widget].tpl ===\n                                                \"tplSchedule-switcherDevicePlan\"\n                                            ) {\n                                                if (\n                                                    templates[template].widgets[widget].data[\"oid-dataId\"] != \"\" &&\n                                                    !newViews[templates[template].widgets[widget].data[\"oid-dataId\"]]\n                                                ) {\n                                                    newViews[templates[template].widgets[widget].data[\"oid-dataId\"]] =\n                                                        {};\n                                                    newViews[templates[template].widgets[widget].data[\"oid-dataId\"]][\n                                                        vis\n                                                    ] = {};\n                                                    newViews[templates[template].widgets[widget].data[\"oid-dataId\"]][\n                                                        vis\n                                                    ][folder] = {};\n                                                    const countCondition: number = Number.parseInt(\n                                                        templates[template].widgets[widget].data[\n                                                            \"conditionStatesCount\"\n                                                        ],\n                                                        10,\n                                                    );\n                                                    const idsCondition: any = [];\n                                                    for (let i = 1; i <= countCondition; i++) {\n                                                        const id: string =\n                                                            templates[template].widgets[widget].data[\n                                                                `oid-conditionStateId${i}`\n                                                            ];\n                                                        if (id !== undefined && id !== \"\") {\n                                                            const json: any = {};\n                                                            json[`oid-conditionStateId${i}`] =\n                                                                templates[template].widgets[widget].data[\n                                                                    `oid-conditionStateId${i}`\n                                                                ];\n                                                            idsCondition.push(json);\n                                                        }\n                                                    }\n                                                    const countState: number = Number.parseInt(\n                                                        templates[template].widgets[widget].data[\n                                                            \"conditionStatesCount\"\n                                                        ],\n                                                        10,\n                                                    );\n                                                    const idsState: any = [];\n                                                    for (let i = 1; i <= countState; i++) {\n                                                        const id: string =\n                                                            templates[template].widgets[widget].data[`oid-stateId${i}`];\n                                                        if (id !== undefined && id !== \"\") {\n                                                            const json: any = {};\n                                                            json[`oid-stateId${i}`] =\n                                                                templates[template].widgets[widget].data[\n                                                                    `oid-stateId${i}`\n                                                                ];\n                                                            idsState.push(json);\n                                                        }\n                                                    }\n                                                    const oid_enabled: string = templates[template].widgets[widget]\n                                                        .data[\"oid-enabled\"]\n                                                        ? templates[template].widgets[widget].data[\"oid-enabled\"]\n                                                        : \"not select\";\n                                                    newViews[templates[template].widgets[widget].data[\"oid-dataId\"]][\n                                                        vis\n                                                    ][folder][widget] = {\n                                                        prefix: folder,\n                                                        namespace: vis,\n                                                        view: template,\n                                                        widgetId: widget,\n                                                        newId: templates[template].widgets[widget].data[\"oid-dataId\"],\n                                                        enabled: oid_enabled,\n                                                        stateCount: countState,\n                                                        state: idsState,\n                                                        conditionCount: countCondition,\n                                                        condition: idsCondition,\n                                                    };\n                                                } else if (\n                                                    templates[template].widgets[widget].data[\"oid-dataId\"] != \"\"\n                                                ) {\n                                                    if (\n                                                        !newViews[\n                                                            templates[template].widgets[widget].data[\"oid-dataId\"]\n                                                        ][vis]\n                                                    )\n                                                        newViews[\n                                                            templates[template].widgets[widget].data[\"oid-dataId\"]\n                                                        ][vis] = {};\n                                                    if (\n                                                        !newViews[\n                                                            templates[template].widgets[widget].data[\"oid-dataId\"]\n                                                        ][vis][folder]\n                                                    )\n                                                        newViews[\n                                                            templates[template].widgets[widget].data[\"oid-dataId\"]\n                                                        ][vis][folder] = {};\n                                                    const countCondition: number = Number.parseInt(\n                                                        templates[template].widgets[widget].data[\n                                                            \"conditionStatesCount\"\n                                                        ],\n                                                        10,\n                                                    );\n                                                    const idsCondition: any = [];\n                                                    for (let i = 1; i <= countCondition; i++) {\n                                                        const id: string =\n                                                            templates[template].widgets[widget].data[\n                                                                `oid-conditionStateId${i}`\n                                                            ];\n                                                        if (id !== undefined && id !== \"\") {\n                                                            const json: any = {};\n                                                            json[`oid-conditionStateId${i}`] =\n                                                                templates[template].widgets[widget].data[\n                                                                    `oid-conditionStateId${i}`\n                                                                ];\n                                                            idsCondition.push(json);\n                                                        }\n                                                    }\n                                                    const countState: number = Number.parseInt(\n                                                        templates[template].widgets[widget].data[\n                                                            \"conditionStatesCount\"\n                                                        ],\n                                                        10,\n                                                    );\n                                                    const idsState: any = [];\n                                                    for (let i = 1; i <= countState; i++) {\n                                                        const id: string =\n                                                            templates[template].widgets[widget].data[`oid-stateId${i}`];\n                                                        if (id !== undefined && id !== \"\") {\n                                                            const json: any = {};\n                                                            json[`oid-stateId${i}`] =\n                                                                templates[template].widgets[widget].data[\n                                                                    `oid-stateId${i}`\n                                                                ];\n                                                            idsState.push(json);\n                                                        }\n                                                    }\n                                                    const oid_enabled: string = templates[template].widgets[widget]\n                                                        .data[\"oid-enabled\"]\n                                                        ? templates[template].widgets[widget].data[\"oid-enabled\"]\n                                                        : \"not select\";\n                                                    newViews[templates[template].widgets[widget].data[\"oid-dataId\"]][\n                                                        vis\n                                                    ][folder][widget] = {\n                                                        prefix: folder,\n                                                        namespace: vis,\n                                                        view: template,\n                                                        widgetId: widget,\n                                                        newId: templates[template].widgets[widget].data[\"oid-dataId\"],\n                                                        enabled: oid_enabled,\n                                                        stateCount: countState,\n                                                        state: idsState,\n                                                        conditionCount: countCondition,\n                                                        condition: idsCondition,\n                                                    };\n                                                }\n                                                if (\n                                                    !templates[template].widgets[widget].data[\"oid-dataId\"] ||\n                                                    templates[template].widgets[widget].data[\"oid-dataId\"] == \"\"\n                                                ) {\n                                                    this.adapter.log.warn(\n                                                        `Missing dataId for ${widget} - ${template} - ${folder} - ${vis}`,\n                                                    );\n                                                }\n                                                if (\n                                                    !templates[template].widgets[widget].data[\"oid-stateId1\"] ||\n                                                    templates[template].widgets[widget].data[\"oid-stateId1\"] == \"\"\n                                                ) {\n                                                    this.adapter.log.warn(\n                                                        `Missing stateId for ${widget} - ${template} - ${folder} - ${vis}`,\n                                                    );\n                                                }\n                                                if (\n                                                    !templates[template].widgets[widget].data[\"oid-enabled\"] ||\n                                                    templates[template].widgets[widget].data[\"oid-enabled\"] == \"\"\n                                                ) {\n                                                    this.adapter.log.warn(\n                                                        `Missing oid-enabledId for ${widget} - ${template} - ${folder} - ${vis}`,\n                                                    );\n                                                }\n                                                if (\n                                                    templates[template].widgets[widget].data[\"oid-dataId\"] &&\n                                                    templates[template].widgets[widget].data[\"oid-enabled\"] &&\n                                                    templates[template].widgets[widget].data[\"oid-dataId\"] != \"\" &&\n                                                    templates[template].widgets[widget].data[\"oid-enabled\"] != \"\"\n                                                ) {\n                                                    const splitDataId =\n                                                        templates[template].widgets[widget].data[\"oid-dataId\"].split(\n                                                            \".\",\n                                                        );\n                                                    const splitEnabledId =\n                                                        templates[template].widgets[widget].data[\"oid-enabled\"].split(\n                                                            \".\",\n                                                        );\n                                                    if (splitDataId.length != 5 || splitDataId[4] != \"data\") {\n                                                        this.adapter.log.warn(\n                                                            `Wrong dataId ${templates[template].widgets[widget].data[\"oid-dataId\"]} for ${widget} - ${template} - ${folder} - ${vis}`,\n                                                        );\n                                                    }\n                                                    if (splitEnabledId.length != 5 || splitEnabledId[4] != \"enabled\") {\n                                                        this.adapter.log.warn(\n                                                            `Wrong dataId ${templates[template].widgets[widget].data[\"oid-enabled\"]} for ${widget} - ${template} - ${folder} - ${vis}`,\n                                                        );\n                                                    }\n                                                    if (splitEnabledId[3] != splitDataId[3]) {\n                                                        this.adapter.log.warn(\n                                                            `Wrong dataId and enabledID ${templates[template].widgets[widget].data[\"oid-dataId\"]} - ${templates[template].widgets[widget].data[\"oid-enabled\"]} for ${widget} - ${template} - ${folder} - ${vis}`,\n                                                        );\n                                                    }\n                                                }\n                                                const wid: any = {};\n                                                wid[widget] = templates[template].widgets[widget];\n                                                allVisViews[vis][folder][template].push(wid);\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        this.adapter.log.debug(\"newViews: \" + JSON.stringify(newViews));\n        if (Object.keys(newViews).length > 0) {\n            for (const stateId in newViews) {\n                const id = stateId.replace(\"data\", \"views\");\n                await this.adapter.setState(id, { val: JSON.stringify(newViews[stateId]), ack: true });\n            }\n        }\n        const prefix: string = `schedule-switcher.${this.adapter.instance}.`;\n        const currentStates: any = await this.adapter.getStatesAsync(`${prefix}*.data`);\n        for (const stateId in currentStates) {\n            if (!newViews[stateId] && typeof currentStates[stateId].val === \"string\") {\n                const id = stateId.replace(\"data\", \"enabled\");\n                const eneabled = await this.adapter.getStateAsync(id);\n                const val = JSON.parse(currentStates[stateId].val);\n                if (\n                    val.onAction &&\n                    val.onAction.idsOfStatesToSet &&\n                    val.onAction.idsOfStatesToSet[0] === \"default.state\"\n                ) {\n                    this.adapter.log.debug(\"Default state!\");\n                }\n                if (\n                    val.offAction &&\n                    val.offAction.idsOfStatesToSet &&\n                    val.offAction.idsOfStatesToSet[0] === \"default.state\"\n                ) {\n                    this.adapter.log.debug(\"Default state!\");\n                }\n                const view = stateId.replace(\"data\", \"views\");\n                if (\n                    (val.onAction.idsOfStatesToSet.length > 0 || val.offAction.idsOfStatesToSet.length > 0) &&\n                    val.triggers.length > 0\n                ) {\n                    await this.adapter.setState(id, { val: false, ack: true });\n                    if (eneabled && eneabled.val) {\n                        await this.adapter.setState(view, {\n                            val: JSON.stringify({\n                                error: `Trigger ${stateId} is active but there is no widget. Set Enabled to false!!!`,\n                            }),\n                            ack: true,\n                        });\n                        this.adapter.log.error(\n                            `Trigger ${stateId} is active but there is no widget. Set Enabled to false!!!`,\n                        );\n                    } else {\n                        await this.adapter.setState(view, {\n                            val: JSON.stringify({\n                                error: `Trigger ${stateId} is active but there is no widget.`,\n                            }),\n                            ack: true,\n                        });\n                    }\n                } else {\n                    await this.adapter.setState(view, {\n                        val: JSON.stringify({\n                            error: `The trigger ${stateId} is not used.`,\n                        }),\n                        ack: true,\n                    });\n                }\n            }\n        }\n    }\n}\n"],
  "mappings": "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",
  "names": []
}
